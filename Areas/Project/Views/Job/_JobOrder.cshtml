<div class="modal fade" id="viewJobOrderModal" tabindex="-1" aria-labelledby="viewJobOrderModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewJobOrderModalLabel">Job Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container mt-3">
                    <input type="hidden" id="companyId" />
                    <input type="hidden" id="jobOrderId" />
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label">Customer Name : </label>
                                <b><span id="customerName"></span></b>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">JobOrder No :</label>
                                <b><span id="jobOrderNo"></span></b>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">JobOrder Date :</label>
                                <b><span id="jobOrderDate"></span></b>
                            </div>
                        </div>
                    </div>
                    <!-- Section 1: Customer Job Details -->

                    <div>
                        <!-- Row 2 -->
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Vessel Name : </label>
                                    <span id="vesselName"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">IMO No : </label>
                                    <span id="imoNo"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">ETA : </label>
                                    <span id="eta"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">ETD : </label>
                                    <span id="etd"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Row 3 -->
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Master's Name : </label>
                                    <span id="mastersName"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Port of Call : </label>
                                    <span id="portOfCall"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Next Port : </label>
                                    <span id="nextportName"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Last Port : </label>
                                    <span id="lastportName"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Row 4 -->
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Nature of Call : </label>
                                    <span id="natureOfCall"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">ISPS : </label>
                                    <span id="isps"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Owners Master : </label>
                                    <span id="ownersMaster"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Owners Agents : </label>
                                    <span id="ownersAgents"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Row 5 -->
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Charters : </label>
                                    <span id="charters"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Charters Agents : </label>
                                    <span id="chartersAgents"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Status : </label>
                                    <span id="status"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Remarks : </label>
                                    <span id="remarks"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <

                    <!-- Section 2: Task Tab with Grids -->
                    <div class="card mb-3">
                        <div class="card-header bg-secondary text-white">Service Details</div>
                        <div class="card-body">
                            <!-- Scrollable Tabs -->
                            <div class="position-relative">
                                <button class="btn btn-sm btn-secondary scroll-left" onclick="scrollTabs(-100)">
                                    &lt;
                                </button>
                                <button class="btn btn-sm btn-secondary scroll-right" onclick="scrollTabs(100)">
                                    &gt;
                                </button>
                                <ul class="nav nav-pills mb-3 flex-nowrap" id="serviceTabs" role="tablist">
                                    <!-- Main Service Tabs -->
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#port-expenses" type="button">
                                            <span class="badge bg-secondary me-1">0</span> Port Expenses
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#launch-services" type="button">
                                            <span class="badge bg-secondary me-1">0</span> Launch Services
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#equipments-used" type="button">
                                            <span class="badge bg-primary me-1">0</span> Equipments Used
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#crew-sign-on" type="button">
                                            <span class="badge bg-success me-1">0</span> Crew Sign On
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#crew-sign-off" type="button">
                                            <span class="badge bg-danger me-1">0</span> Crew Sign Off
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#crew-miscellaneous" type="button">
                                            <span class="badge bg-info me-1">0</span> Crew Miscellaneous
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#medical-assistance" type="button">
                                            <span class="badge bg-warning me-1">0</span> Medical Assistance
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#consignment-import" type="button">
                                            <span class="badge bg-primary me-1">0</span> Consignment Import
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#consignment-export" type="button">
                                            <span class="badge bg-success me-1">0</span> Consignment Export
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#third-party-supply" type="button">
                                            <span class="badge bg-danger me-1">0</span> Third Party Supply
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#fresh-water" type="button">
                                            <span class="badge bg-info me-1">0</span> Fresh Water
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#technicians-surveyors" type="button">
                                            <span class="badge bg-warning me-1">0</span> Technicians Surveyors
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#landing-items" type="button">
                                            <span class="badge bg-primary me-1">0</span> Landing Items
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#other-service" type="button">
                                            <span class="badge bg-success me-1">0</span> Other Service
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#agency-remuneration" type="button">
                                            <span class="badge bg-danger me-1">0</span> Agency Remuneration
                                        </button>
                                    </li>
                                </ul>
                            </div>

                            <!-- Tab Content -->
                            <div class="tab-content" id="serviceTabContent">
                                <!-- Port Expenses Tab -->
                                <div class="tab-pane fade show active" id="port-expenses">
                                    <!-- Button Group for Port Expenses -->
                                    <div class="mb-3 d-flex align-items-center flex-wrap">
                                        <button id="btnAddPortExpense" onclick="openChildModal('PortExpense')" class="btn btn-primary me-2">Add Port Expense</button>
                                        <button id="btnCreateDebitNotePortExpense" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardPortExpense" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdatePortExpense" class="btn btn-warning me-2">Bulk Update</button>

                                        <!-- Checkbox -->
                                        <div class="form-check me-2 mb-0">
                                            <input type="checkbox" id="isPortExpenseDebitNoteNo" class="form-check-input">
                                            <label for="isPortExpenseDebitNoteNo" class="form-check-label">Is Debit Note No.</label>
                                        </div>

                                        <!-- Input Box -->
                                        <input type="text" id="portExpensedebitNoteNo" class="form-control" placeholder="Enter Debit Note No." style="display: none; width: auto;">
                                    </div>

                                    <!-- Grid for Port Expenses -->
                                    <div id="grid-PortExpense" class="kendo-grid"></div>
                                </div>

                                <!-- Launch Services Tab -->
                                <div class="tab-pane fade" id="launch-services">
                                    <!-- Button Group for Launch Services (adjust as needed) -->
                                    <div class="mb-3">
                                        <button id="btnAddLaunchService" onclick="openChildModal('LaunchService')" class="btn btn-primary me-2">Add Launch Service</button>
                                        <button id="btnCreateDebitNoteLaunch" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardLaunch" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateLaunch" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Launch Services -->
                                    <div id="grid-LaunchService" class="kendo-grid"></div>
                                </div>

                                <!-- Equipments Used Tab -->
                                <div class="tab-pane fade" id="equipments-used">
                                    <!-- Button Group for Equipments Used -->
                                    <div class="mb-3">
                                        <button id="btnAddEquipmentUsed" onclick="openChildModal('EquipmentUsed')" class="btn btn-primary me-2">Add Equipment</button>
                                        <button id="btnCreateDebitNoteEquipment" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardEquipment" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateEquipment" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Equipments Used -->
                                    <div id="grid-EquipmentUsed" class="kendo-grid"></div>
                                </div>

                                <!-- Crew Sign On Tab -->
                                <div class="tab-pane fade" id="crew-sign-on">
                                    <!-- Button Group for Crew Sign On -->
                                    <div class="mb-3">
                                        <button id="btnAddCrewSignOn" onclick="openChildModal('CrewSignOn')" class="btn btn-primary me-2">Add Crew Sign On</button>
                                        <button id="btnCreateDebitNoteCrewOn" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardCrewOn" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateCrewOn" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Crew Sign On -->
                                    <div id="grid-CrewSignOn" class="kendo-grid"></div>
                                </div>

                                <!-- Crew Sign Off Tab -->
                                <div class="tab-pane fade" id="crew-sign-off">
                                    <!-- Button Group for Crew Sign Off -->
                                    <div class="mb-3">
                                        <button id="btnAddCrewSignOff" onclick="openChildModal('CrewSignOff')" class="btn btn-primary me-2">Add Crew Sign Off</button>
                                        <button id="btnCreateDebitNoteCrewOff" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardCrewOff" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateCrewOff" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Crew Sign Off -->
                                    <div id="grid-CrewSignOff" class="kendo-grid"></div>
                                </div>

                                <!-- Crew Miscellaneous Tab -->
                                <div class="tab-pane fade" id="crew-miscellaneous">
                                    <!-- Button Group for Crew Miscellaneous -->
                                    <div class="mb-3">
                                        <button id="btnAddCrewMisc" onclick="openChildModal('CrewMisc')" class="btn btn-primary me-2">Add Crew Miscellaneous</button>
                                        <button id="btnCreateDebitNoteCrewMisc" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardCrewMisc" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateCrewMisc" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Crew Miscellaneous -->
                                    <div id="grid-CrewMisc" class="kendo-grid"></div>
                                </div>

                                <!-- Medical Assistance Tab -->
                                <div class="tab-pane fade" id="medical-assistance">
                                    <!-- Button Group for Medical Assistance -->
                                    <div class="mb-3">
                                        <button id="btnAddMedicalAssistance" onclick="openChildModal('MedicalAssistance')" class="btn btn-primary me-2">Add Medical Assistance</button>
                                        <button id="btnCreateDebitNoteMedical" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardMedical" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateMedical" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Medical Assistance -->
                                    <div id="grid-MedicalAssistance" class="kendo-grid"></div>
                                </div>

                                <!-- Consignment Import Tab -->
                                <div class="tab-pane fade" id="consignment-import">
                                    <!-- Button Group for Consignment Import -->
                                    <div class="mb-3">
                                        <button id="btnAddConsignmentImport" onclick="openChildModal('ConsignmentImport')" class="btn btn-primary me-2">Add Consignment Import</button>
                                        <button id="btnCreateDebitNoteConsignmentImport" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardConsignmentImport" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateConsignmentImport" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Consignment Import -->
                                    <div id="grid-ConsignmentImport" class="kendo-grid"></div>
                                </div>

                                <!-- Consignment Export Tab -->
                                <div class="tab-pane fade" id="consignment-export">
                                    <!-- Button Group for Consignment Export -->
                                    <div class="mb-3">
                                        <button id="btnAddConsignmentExport" onclick="openChildModal('ConsignmentExport')" class="btn btn-primary me-2">Add Consignment Export</button>
                                        <button id="btnCreateDebitNoteConsignmentExport" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardConsignmentExport" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateConsignmentExport" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Consignment Export -->
                                    <div id="grid-ConsignmentExport" class="kendo-grid"></div>
                                </div>

                                <!-- Third Party Supply Tab -->
                                <div class="tab-pane fade" id="third-party-supply">
                                    <!-- Button Group for Third Party Supply -->
                                    <div class="mb-3">
                                        <button id="btnAddThirdPartySupply" onclick="openChildModal('ThirdPartySupply')" class="btn btn-primary me-2">Add Third Party Supply</button>
                                        <button id="btnCreateDebitNoteThirdParty" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardThirdParty" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateThirdParty" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Third Party Supply -->
                                    <div id="grid-ThirdPartySupply" class="kendo-grid"></div>
                                </div>

                                <!-- Fresh Water Tab -->
                                <div class="tab-pane fade" id="fresh-water">
                                    <!-- Button Group for Fresh Water -->
                                    <div class="mb-3">
                                        <button id="btnAddFreshWater" onclick="openChildModal('FreshWater')" class="btn btn-primary me-2">Add Fresh Water</button>
                                        <button id="btnCreateDebitNoteFreshWater" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardFreshWater" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateFreshWater" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Fresh Water -->
                                    <div id="grid-FreshWater" class="kendo-grid"></div>
                                </div>

                                <!-- Technicians Surveyors Tab -->
                                <div class="tab-pane fade" id="technicians-surveyors">
                                    <!-- Button Group for Technicians Surveyors -->
                                    <div class="mb-3">
                                        <button id="btnAddTechnicianSurveyor" onclick="openChildModal('TechnicianSurveyor')" class="btn btn-primary me-2">Add Technician Surveyor</button>
                                        <button id="btnCreateDebitNoteTechnicians" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardTechnicians" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateTechnicians" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Technicians Surveyors -->
                                    <div id="grid-TechnicianSurveyor" class="kendo-grid"></div>
                                </div>

                                <!-- Landing Items Tab -->
                                <div class="tab-pane fade" id="landing-items">
                                    <!-- Button Group for Landing Items -->
                                    <div class="mb-3">
                                        <button id="btnAddLandingItem" onclick="openChildModal('LandingItem')" class="btn btn-primary me-2">Add Landing Item</button>
                                        <button id="btnCreateDebitNoteLanding" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardLanding" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateLanding" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Landing Items -->
                                    <div id="grid-LandingItem" class="kendo-grid"></div>
                                </div>

                                <!-- Other Service Tab -->
                                <div class="tab-pane fade" id="other-service">
                                    <!-- Button Group for Other Service -->
                                    <div class="mb-3">
                                        <button id="btnAddOtherService" onclick="openChildModal('OtherService')" class="btn btn-primary me-2">Add Other Service</button>
                                        <button id="btnCreateDebitNoteOther" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardOther" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateOther" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Other Service -->
                                    <div id="grid-OtherService" class="kendo-grid"></div>
                                </div>

                                <!-- Agency Remuneration Tab -->
                                <div class="tab-pane fade" id="agency-remuneration">
                                    <!-- Button Group for Agency Remuneration -->
                                    <div class="mb-3">
                                        <button id="btnAddAgencyRemuneration" onclick="openChildModal('AgencyRemuneration')" class="btn btn-primary me-2">Add Agency Remuneration</button>
                                        <button id="btnCreateDebitNoteAgency" class="btn btn-secondary me-2">Create DebitNote</button>
                                        <button id="btnTaskForwardAgency" class="btn btn-info me-2">Task Forward</button>
                                        <button id="btnBulkUpdateAgency" class="btn btn-warning">Bulk Update</button>
                                    </div>
                                    <!-- Grid for Agency Remuneration -->
                                    <div id="grid-AgencyRemuneration" class="kendo-grid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function scrollTabs(offset) {
        const tabs = document.getElementById('serviceTabs');
        tabs.scrollBy({ left: offset, behavior: 'smooth' });
    }

    function openChildModal(serviceType) {
        const modalId = `#add${serviceType}Modal`;
        const modalElement = $(modalId);
        modalElement.modal('show');

        let jobOrderId = $('#jobOrderId').val();
        let companyId = $('#companyId').val();

        const functionName = `open${serviceType}Modal`;
        if (typeof window[functionName] === 'function') {
            window[functionName](jobOrderId, 0, 'add');
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        const isDebitNoteNoCheckbox = document.getElementById('isPortExpenseDebitNoteNo');
        const debitNoteNoInput = document.getElementById('portExpensedebitNoteNo');

        // Toggle visibility of input box based on checkbox
        isDebitNoteNoCheckbox.addEventListener('change', function () {
            debitNoteNoInput.style.display = this.checked ? 'block' : 'none';
        });
    });

      function loadStatusCounts() {

      let customerId = getComboBoxValue('#cmb_customer', 0);
      let portId = getComboBoxValue('#cmb_port', 0);

      $.ajax({
          url: '@Url.Action("GetTariffStatusCounts", "Tariff", new { area = "Project" })',
          type: 'POST', // Use POST method
          data: {
              searchString: '',
              companyId: companyId,
              customerId: customerId,
              portId: portId
          },
          success: function (counts) {

              $('#serviceTabs [data-status="PortExpense"] .badge').text(counts.portExpense);
              $('#serviceTabs [data-status="LaunchServices"] .badge').text(counts.launchServices);
              $('#serviceTabs [data-status="EquipmentsUsed"] .badge').text(counts.equipmentsUsed);
              $('#serviceTabs [data-status="CrewSignOn"] .badge').text(counts.crewSignOn);
              $('#serviceTabs [data-status="CrewSignOff"] .badge').text(counts.crewSignOff);
              $('#serviceTabs [data-status="CrewMiscellaneous"] .badge').text(counts.crewMiscellaneous);
              $('#serviceTabs [data-status="MedicalAssistance"] .badge').text(counts.medicalAssistance);
              $('#serviceTabs [data-status="ConsignmentImport"] .badge').text(counts.consignmentImport);
              $('#serviceTabs [data-status="ConsignmentExport"] .badge').text(counts.consignmentExport);
              $('#serviceTabs [data-status="ThirdPartySupply"] .badge').text(counts.thirdPartySupply);
              $('#serviceTabs [data-status="FreshWaterSupply"] .badge').text(counts.freshWaterSupply);
              $('#serviceTabs [data-status="TechniciansSurveyors"] .badge').text(counts.techniciansSurveyors);
              $('#serviceTabs [data-status="LandingItems"] .badge').text(counts.landingItems);
              $('#serviceTabs [data-status="OtherService"] .badge').text(counts.otherService);
              $('#serviceTabs [data-status="AgencyRemuneration"] .badge').text(counts.agencyRemuneration);
              $('#serviceTabs [data-status="Visa"] .badge').text(counts.visa);
          },
          error: function (xhr, status, error) {
              console.error('Error loading status counts:', error);
          }
      });
  }

    // ================== PORT EXPENSES GRID ================== //
    function initializePortExpenseGrid() {

        let searchString = "";
        let jobOrderId = $('#jobOrderId').val();
        let companyId = $('#companyId').val();

        if (jobOrderId > 0) {
            let url = '@Url.Action("PortExpensesList", "Job", new { area = "Project" })';
            let columns = [
                {
                    title: "Actions",
                    width: "200px",
                    headerTemplate: '<input type="checkbox" id="selectAllDebitNotes" onclick="toggleSelectAll(this)" />',
                    template: function (dataItem) {
                        // Define a common style for equal height, width, and gap
                        let commonStyle = 'style="margin-right:5px; vertical-align: middle;"';

                        // Row checkbox with common style
                        let rowCheckbox = `<input type="checkbox" class="ps-0 border-0 bg-transparent selectDebitNote" ${commonStyle} onclick="updateSelected(this, '${dataItem.jobOrderId}','${dataItem.portExpenseId}')" />`;

                        // Action buttons with common style; applying the style to both button and its icon for proper alignment.
                        let buttons = `<button class="ps-0 border-0 bg-transparent" ${commonStyle} onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}','${dataItem.debitNoteId}', 'view')">
        <i class="material-symbols-outlined text-primary">visibility</i>
    </button>`;

                        buttons += `<button class="ps-0 border-0 bg-transparent" ${commonStyle} onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}','${dataItem.debitNoteId}', 'edit')">
        <i class="material-symbols-outlined text-warning" >edit</i>
    </button>`;

                        buttons += `<button class="ps-0 border-0 bg-transparent" ${commonStyle} onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}','${dataItem.debitNoteId}')">
        <i class="material-symbols-outlined text-danger" >delete</i>
    </button>`;

                        buttons += `<button class="ps-0 border-0 bg-transparent" ${commonStyle} onclick="purchaseExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}','${dataItem.debitNoteId}')">
        <i class="material-symbols-outlined" >universal_currency_alt</i>
    </button>`;

                        buttons += `<button class="ps-0 border-0 bg-transparent" ${commonStyle} onclick="debitNoteExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}','${dataItem.debitNoteId}')">
        <i class="material-symbols-outlined" >payments</i>
    </button>`;

                        return rowCheckbox + buttons;
                    }
                },
                { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
                { field: "supplierName", title: "Supplier Name", width: "200px" },
                { field: "chargeName", title: "Charge Name", width: "150px" },
                { field: "statusName", title: "Status Name", width: "150px" },
                {
                    field: "deliverDate",
                    title: "Deliver Date",
                    width: "120px",
                    template: function (dataItem) {
                        var date = new Date(dataItem.deliverDate);
                        return kendo.toString(date, "dd/MM/yyyy");
                    }
                },
                { field: "uomName", title: "Uom Name", width: "120px" },
                { field: "quantity", title: "Quantity", width: "100px" },
                { field: "description", title: "Description", width: "250px" },
                { field: "remarks", title: "Remarks", width: "200px" },
                {
                    field: "isActive",
                    title: "Active",
                    width: "80px",
                    template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />'
                }
            ];

            let grid = $("#grid-PortExpense").data("kendoGrid");
            if (grid) {
                grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
            } else {
                // Initialize grid if it doesn’t exist
                initializeKendoGridWithoutPaging("grid-PortExpense", url, { searchString, companyId, jobOrderId }, columns);
            }
        }
    }

    // ================== LAUNCH SERVICES GRID ================== //
    function initializeLaunchServiceGrid() {

        let searchString = "";
        let jobOrderId = $('#jobOrderId').val();
        let companyId = $('#companyId').val();

        if (jobOrderId > 0) {
            let url = '@Url.Action("LaunchServiceList", "Job", new { area = "Project" })';
            let columns = [
                {
                    title: "Actions",
                    width: "100px",
                    template: function (dataItem) {
                        let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                        return buttons;
                    }
                },
                { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
                { field: "jobOrderNo", title: "Job Order No", width: "150px" },
                { field: "supplierName", title: "Supplier Name", width: "200px" },
                { field: "chargeName", title: "Charge Name", width: "150px" },
                { field: "statusName", title: "Status Name", width: "150px" },
                { field: "uomName", title: "Uom Name", width: "120px" },
                { field: "quantity", title: "Quantity", width: "100px" },
                { field: "description", title: "Description", width: "250px" },
                { field: "remarks", title: "Remarks", width: "200px" },
                { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
            ];

            let grid = $("#grid-LaunchService").data("kendoGrid");
            if (grid) {
                grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
            } else {
                // Initialize grid if it doesn’t exist
                initializeKendoGridWithoutPaging("grid-LaunchService", url, { searchString, companyId, jobOrderId }, columns);
            }
        }
    }

    // ================== EQUIPMENT USED GRID ================== //
    function initializeEquipmentUsedGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("EquipmentUsedList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-EquipmentUsed").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-EquipmentUsed", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== CREW SIGN-ON GRID ================== //
    function initializeCrewSignOnGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("CrewSignOnList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-CrewSignOn").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-CrewSignOn", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== CREW SIGN-OFF GRID ================== //
    function initializeCrewSignOffGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("CrewSignOffList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-CrewSignOff").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-CrewSignOff", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== CRE MISCELLANEOUS GRID ================== //
    function initializeCrewMiscGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("CrewMiscList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-CrewMisc").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-CrewMisc", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== MEDICAL ASSISTANCE GRID ================== //
    function initializeMedicalAssistanceGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("MedicalAssistanceList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-MedicalAssistance").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-MedicalAssistance", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== CONSIGNMENT IMPORT GRID ================== //
    function initializeConsignmentImportGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("ConsignmentImportList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-ConsignmentImport").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-ConsignmentImport", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== CONSIGNMENT EXPORT GRID ================== //
    function initializeConsignmentExportGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("ConsignmentExportList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-ConsignmentExport").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-ConsignmentExport", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== THIRD PARTY SUPPLY GRID ================== //
    function initializeThirdPartySupplyGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("ThirdPartySupplyList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-ThirdPartySupply").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-ThirdPartySupply", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== FRESH WATER GRID ================== //
    function initializeFreshWaterGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("FreshWaterList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-FreshWater").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-FreshWater", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== TECHNICIAN SURVEYOR GRID ================== //
    function initializeTechnicianSurveyorGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("TechnicianSurveyorList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-TechnicianSurveyor").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-TechnicianSurveyor", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== LANDING ITEM GRID ================== //
    function initializeLandingItemGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("LandingItemList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-LandingItem").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-LandingItem", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== OTHER SERVICE GRID ================== //
    function initializeOtherServiceGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("OtherServiceList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-OtherService").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-OtherService", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }

    // ================== AGENCY REMUNERATION GRID ================== //
    function initializeAgencyRemunerationGrid() {

let searchString = "";
let jobOrderId = $('#jobOrderId').val();
let companyId = $('#companyId').val();

if (jobOrderId > 0) {
    let url = '@Url.Action("AgencyRemunerationList", "Job", new { area = "Project" })';
    let columns = [
        {
            title: "Actions",
            width: "100px",
            template: function (dataItem) {
                let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'view')">
    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openPortExpenseModal('${dataItem.jobOrderId}','${dataItem.portExpenseId}', 'edit')">
    <i class="material-symbols-outlined text-warning">edit</i></button>`;

                buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deletePortExpense('${dataItem.jobOrderId}','${dataItem.portExpenseId}')">
    <i class="material-symbols-outlined text-danger">delete</i></button>`;

                return buttons;
            }
        },
        { field: "debitNoteNo", title: "Debit Note No.", width: "150px" },
        { field: "jobOrderNo", title: "Job Order No", width: "150px" },
        { field: "supplierName", title: "Supplier Name", width: "200px" },
        { field: "chargeName", title: "Charge Name", width: "150px" },
        { field: "statusName", title: "Status Name", width: "150px" },
        { field: "uomName", title: "Uom Name", width: "120px" },
        { field: "quantity", title: "Quantity", width: "100px" },
        { field: "description", title: "Description", width: "250px" },
        { field: "remarks", title: "Remarks", width: "200px" },
        { field: "isActive", title: "Active", width: "80px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
    ];

            let grid = $("#grid-AgencyRemuneration").data("kendoGrid");
    if (grid) {
        grid.dataSource.read({ searchString: searchString, companyId: companyId, jobOrderId });
    } else {
        // Initialize grid if it doesn’t exist
        initializeKendoGrid("grid-AgencyRemuneration", url, { searchString, companyId, jobOrderId }, columns);
    }
}
    }
</script>

<style>
    .modal-xxl {
        max-width: 95%;
    }

    .scroll-left, .scroll-right {
        position: absolute;
        top: 50%;
        z-index: 100;
        transform: translateY(-50%);
    }

    .scroll-left {
        left: -40px;
    }

    .scroll-right {
        right: -40px;
    }

    /* Ensure tabs scroll horizontally if needed */
    .nav-pills.flex-nowrap {
        overflow-x: auto;
        white-space: nowrap;
    }
        /* Optionally hide the scrollbar for a cleaner look */
        .nav-pills.flex-nowrap::-webkit-scrollbar {
            display: none;
        }

    .kendo-grid {
        height: 500px;
        margin-top: 20px;
    }

    .nav-link {
        transition: all 0.3s ease;
    }

        .nav-link.active {
            transform: scale(1.05);
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

    .card-header {
        font-weight: 600;
        letter-spacing: 0.5px;
    }
</style>