<!-- FreshWater Modal -->
<div class="modal fade" id="addFreshWaterModal" tabindex="-1" aria-labelledby="addFreshWaterModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFreshWaterModalLabel">Fresh Water</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Container replacing form tag -->
                <div id="freshWaterContainer">
                    <input type="hidden" id="companyId" />
                    <input type="hidden" id="freshWater_jobOrderId" />
                    <input type="hidden" id="freshWater_jobOrderNo" />
                    <input type="hidden" id="freshWater_debitNoteId" />
                    <input type="hidden" id="freshWater_debitNoteNo" />
                    <input type="hidden" id="freshWaterId" />
                    <div class="row">
                        <div class="col-md-4">
                            <label class="form-label">Date of Supply <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="freshWater_dateOfSupply">
                        </div>
                        <div class="col-md-4">
                            <label for="freshWater_cmb_charge" class="form-label">Charge <span class="text-danger">*</span></label>
                            <select id="freshWater_cmb_charge" style="width: 100%"></select>
                        </div>
                        <div class="col-md-4">
                            <label for="freshWater_cmb_gl" class="form-label">GL Account <span class="text-danger">*</span></label>
                            <select id="freshWater_cmb_gl" style="width: 100%"></select>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-4">
                            <label class="form-label">Receipt Number</label>
                            <input type="text" class="form-control" id="freshWater_receiptNumber">
                        </div>
                        <div class="col-md-4">
                            <label for="freshWater_cmb_bargeName" class="form-label">Barge Name</label>
                            <select id="freshWater_cmb_bargeName" style="width: 100%"></select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Barge Operator Name</label>
                            <input type="text" class="form-control" id="freshWater_bargeOperatorName">
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-3">
                            <label class="form-label">Distance</label>
                            <input type="number" class="form-control" id="freshWater_distance" step="0.01" value="0.00">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Quantity <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="freshWater_quantity" step="0.01" value="0.00">
                        </div>
                        <div class="col-md-3">
                            <label for="freshWater_cmb_uom" class="form-label">UOM</label>
                            <select id="freshWater_cmb_uom" style="width: 100%"></select>
                        </div>
                        <div class="col-md-3">
                            <label for="freshWater_cmb_status" class="form-label">Status <span class="text-danger">*</span></label>
                            <select id="freshWater_cmb_status" style="width: 100%"></select>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="freshWater_isVesselCallingLocation">
                                <label class="form-check-label" for="freshWater_isVesselCallingLocation">
                                    Vessel Calling Location
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-4">
                            <label class="form-label">Total Amount</label>
                            <input type="number" class="form-control" id="freshWater_totAmt" step="0.01" value="0.00" readonly>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">GST Amount</label>
                            <input type="number" class="form-control" id="freshWater_gstAmt" step="0.01" value="0.00" readonly>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Total After GST</label>
                            <input type="number" class="form-control" id="freshWater_totAmtAftGst" step="0.01" value="0.00" readonly>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-12">
                            <label class="form-label">Remarks</label>
                            <textarea class="form-control" id="freshWater_remarks" rows="2"></textarea>
                        </div>
                    </div>

                    <!-- Audit Fields -->
                    <div class="accordion mt-3" id="auditAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#auditCollapse">
                                    Audit Details
                                </button>
                            </h2>
                            <div id="auditCollapse" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Created By</label>
                                            <p id="freshWatercreateBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Created Date</label>
                                            <p id="freshWatercreateDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Modified By</label>
                                            <p id="freshWatereditBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Modified Date</label>
                                            <p id="freshWatereditDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Edit Version</label>
                                            <p id="freshWatereditVersion" class="form-control-plaintext"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End of container -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="btnFreshWaterClear" onclick="clearFreshWaterForm()">Clear</button>
                <button type="button" class="btn btn-primary" id="btnFreshWaterSave" onclick="saveFreshWater()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
    function refreshFreshWaterDropdown() {
        const chartOfAccountUrl = '@Url.Action("GetChartOfAccountLookup", "Lookup", new { area = "" })?companyId=' + companyId;
        const glcolumnsProperties = [
            { field: 'glCode', title: 'Code', width: 100 },
            { field: 'glName', title: 'Name', width: 200 }
        ];
        const glfilterFields = ['glCode', 'glName'];
        bindMultiColumnComboBox(chartOfAccountUrl, "freshWater_cmb_gl", "glName", "glId", glcolumnsProperties, glfilterFields);

        const chargeUrl = `@Url.Action("GetChargeLookup", "Lookup", new { area = "" })?companyId=${companyId}&taskId=9`;
        bindComboBox(chargeUrl, "freshWater_cmb_charge", "chargeName", "chargeId");

        const uomUrl = '@Url.Action("GetUomLookup", "Lookup", new { area = "" })?companyId=' + companyId;
        bindComboBox(uomUrl, "freshWater_cmb_uom", "uomName", "uomId");

        const statusUrl = `@Url.Action("GetOrderTypeLookup", "Lookup", new { area = "" })?companyId=${companyId}&categoryId=4`;
        bindComboBox(statusUrl, "freshWater_cmb_status", "orderTypeName", "orderTypeId");

        const bargeNameUrl = `@Url.Action("GetBargeNameLookup", "Lookup", new { area = "" })?companyId=${companyId}`;
        bindComboBox(bargeNameUrl, "freshWater_cmb_bargeName", "bargeNameLookup", "bargeNameLookupId");
    }

    function clearFreshWaterForm() {
        $('#freshWaterId').val('');
        $('#freshWater_jobOrderId').val('');
        $('#freshWater_jobOrderNo').val('');
        $('#freshWater_debitNoteId').val('');
        $('#freshWater_debitNoteNo').val('');

        $('#freshWater_cmb_gl').data('kendoMultiColumnComboBox').value('');
        $('#freshWater_cmb_charge').data('kendoComboBox').value('');
        $('#freshWater_cmb_uom').data('kendoComboBox').value('');
        $('#freshWater_cmb_status').data('kendoComboBox').value('');
        $('#freshWater_cmb_bargeName').data('kendoComboBox').value('');

        $('#freshWater_dateOfSupply').val('');
        $('#freshWater_receiptNumber').val('');
        $('#freshWater_bargeOperatorName').val('');
        $('#freshWater_distance').val('0.00');
        $('#freshWater_quantity').val('0.00');
        $('#freshWater_isVesselCallingLocation').prop('checked', false);
        $('#freshWater_totAmt').val('0.00');
        $('#freshWater_gstAmt').val('0.00');
        $('#freshWater_totAmtAftGst').val('0.00');
        $('#freshWater_remarks').val('');

        $('#freshWatercreateBy').text('');
        $('#freshWatercreateDate').text('');
        $('#freshWatereditBy').text('');
        $('#freshWatereditDate').text('');
        $('#freshWatereditVersion').text('');

        $('#btnFreshWaterClear').show();
    }

    function setDefaultFreshWaterValues() {
        // Set current date
        const today = new Date().toISOString().split('T')[0];
        $('#freshWater_dateOfSupply').val(today);

        // Set default GL Account
        setTimeout(() => {
            const glCombo = $('#freshWater_cmb_gl').data('kendoMultiColumnComboBox');
            if (glCombo.dataSource.view().length > 0) {
                glCombo.select(0);
            }
        }, 100);

        // Set default to first charge
        setTimeout(() => {
            const chargeCombo = $('#freshWater_cmb_charge').data('kendoComboBox');
            if (chargeCombo.dataSource.view().length > 0) {
                chargeCombo.select(0);
            }
        }, 100);

        // Set default to first UOM
        setTimeout(() => {
            const uomCombo = $('#freshWater_cmb_uom').data('kendoComboBox');
            if (uomCombo.dataSource.view().length > 0) {
                uomCombo.select(0);
            }
        }, 100);

        // Set default status to "Confirm"
        setTimeout(() => {
            const statusCombo = $('#freshWater_cmb_status').data('kendoComboBox');
            const confirmItem = statusCombo.dataSource.data().find(item =>
                item.orderTypeName.toLowerCase() === "confirmed"
            );
            if (confirmItem) {
                statusCombo.value(confirmItem.orderTypeId);
            }
        }, 100);
    }

    function openFreshWaterModal(jobOrderId, jobOrderNo, freshWaterId, mode) {
        const $modal = $('#addFreshWaterModal');
        const parsedJobOrderId = parseInt(jobOrderId, 10);
        const parsedFreshWaterId = parseInt(freshWaterId, 10);
        $('#freshWater_jobOrderId').val(jobOrderId);
        $('#freshWater_jobOrderNo').val(jobOrderNo);

        const isValidId = id => !isNaN(id) && id !== null && id !== "" && id > 0;

        // Edit Mode: Fetch existing data and populate the form
        if (isValidId(parsedJobOrderId) && isValidId(parsedFreshWaterId)) {
            $modal.find('.modal-content').append('<div class="modal-overlay"><div class="spinner"></div></div>');

            $.get('@Url.Action("GetFreshWaterById", "Job", new { area = "Project" })', {
                jobOrderId: parsedJobOrderId,
                freshWaterId: parsedFreshWaterId,
                companyId: $('#companyId').val()
            })
                .done(function (response) {
                    if (response.success) {
                        refreshFreshWaterDropdown();
                        clearFreshWaterForm();
                        populateFreshWaterModalFields(response.data);
                        $('#addFreshWaterModal').modal('show');
                    }
                })
                .always(() => $modal.find('.modal-overlay').remove());
        } else {
            // Add Mode: Clear form and set default values
            refreshFreshWaterDropdown();
            clearFreshWaterForm();
            setDefaultFreshWaterValues();
           
            $('#addFreshWaterModal').modal('show');
        }
    }

    function populateFreshWaterModalFields(data) {
        // Set hidden fields
        $('#companyId').val(data.companyId);
        $('#freshWaterId').val(data.freshWaterId);
        $('#freshWater_jobOrderId').val(data.jobOrderId);
        $('#freshWater_jobOrderNo').val(data.jobOrderNo);
        $('#freshWater_debitNoteId').val(data.debitNoteId);
        $('#freshWater_debitNoteNo').val(data.debitNoteNo);

        // Set date fields
        if (data.dateOfSupply) {
            const dateOfSupply = new Date(data.dateOfSupply).toLocaleDateString('en-CA');
            $('#freshWater_dateOfSupply').val(dateOfSupply);
        }

        // Set combobox values, ensuring they update after data is loaded
        const chargeCombo = $('#freshWater_cmb_charge').data('kendoComboBox');
        chargeCombo.value(data.chargeId > 0 ? data.chargeId : '');
        chargeCombo.one('dataBound', function () {
            chargeCombo.value(data.chargeId > 0 ? data.chargeId : '');
        });

        const glCombo = $('#freshWater_cmb_gl').data('kendoMultiColumnComboBox');
        glCombo.value(data.glId > 0 ? data.glId : '');
        glCombo.one('dataBound', function () {
            glCombo.value(data.glId > 0 ? data.glId : '');
        });

        const uomCombo = $('#freshWater_cmb_uom').data('kendoComboBox');
        uomCombo.value(data.uomId > 0 ? data.uomId : '');
        uomCombo.one('dataBound', function () {
            uomCombo.value(data.uomId > 0 ? data.uomId : '');
        });

        const statusCombo = $('#freshWater_cmb_status').data('kendoComboBox');
        statusCombo.value(data.statusId > 0 ? data.statusId : '');
        statusCombo.one('dataBound', function () {
            statusCombo.value(data.statusId > 0 ? data.statusId : '');
        });

        const bargeNameCombo = $('#freshWater_cmb_bargeName').data('kendoComboBox');
        bargeNameCombo.value(data.bargeNameLookupId > 0 ? data.bargeNameLookupId : '');
        bargeNameCombo.one('dataBound', function () {
            bargeNameCombo.value(data.bargeNameLookupId > 0 ? data.bargeNameLookupId : '');
        });

        // Set other fields
        $('#freshWater_receiptNumber').val(data.receiptNumber);
        $('#freshWater_bargeOperatorName').val(data.bargeOperatorName);
        $('#freshWater_distance').val(data.distance || 0.00);
        $('#freshWater_quantity').val(data.quantity || 0.00);
        $('#freshWater_isVesselCallingLocation').prop('checked', data.isVesselCallingLocation);
        $('#freshWater_totAmt').val(data.totAmt);
        $('#freshWater_gstAmt').val(data.gstAmt);
        $('#freshWater_totAmtAftGst').val(data.totAmtAftGst);
        $('#freshWater_remarks').val(data.remarks);

        // Set audit fields
        $('#freshWatercreateBy').text(data.createBy || "N/A");
        $('#freshWatercreateDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
        $('#freshWatereditBy').text(data.editBy || "N/A");
        $('#freshWatereditDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");
        $('#freshWatereditVersion').text(data.editVersion || "0");
        
        // Hide clear button in edit mode
        $('#btnFreshWaterClear').hide();

        // Enable/disable fields based on debitNoteId
        if (data.debitNoteId > 0) {
            chargeCombo.enable(false);
            uomCombo.enable(false);
            statusCombo.enable(false);
            glCombo.enable(false);
            bargeNameCombo.enable(false);
            
            $('input, textarea').not('#btnFreshWaterSave').prop('readonly', true);
            $('#freshWater_isVesselCallingLocation').prop('disabled', true);
            $('#btnFreshWaterSave').prop('disabled', false);
        } else {
            chargeCombo.enable(true);
            uomCombo.enable(true);
            statusCombo.enable(true);
            glCombo.enable(true);
            bargeNameCombo.enable(true);
            
            $('input, textarea').not('#freshWater_totAmt, #freshWater_gstAmt, #freshWater_totAmtAftGst').prop('readonly', false);
            $('#freshWater_isVesselCallingLocation').prop('disabled', false);
            $('#btnFreshWaterSave').prop('disabled', false);
        }
    }

    function deleteFreshWater(jobOrderId, freshWaterId) {
        showDeleteModal("Are you sure you want to delete this record?", function () {
            $.ajax({
                url: '@Url.Action("DeleteFreshWater", "Job", new { area = "Project" })',
                type: "DELETE",
                data: { jobOrderId, freshWaterId, companyId: companyId },
                success: function (response) {
                    if (response.success) {
                        loadFreshWaterGrid();
                        $('#confirmationModal').modal('hide');
                    }
                }
            });
        });
    }

    function saveFreshWater() {
        let freshWaterData = {
            FreshWaterId: parseInt($('#freshWaterId').val()) || 0,
            JobOrderId: parseInt($('#freshWater_jobOrderId').val()) || 0,
            JobOrderNo: $('#freshWater_jobOrderNo').val() || '',
            ChargeId: parseInt($('#freshWater_cmb_charge').data('kendoComboBox').value()) || 0,
            GLId: parseInt($('#freshWater_cmb_gl').data('kendoMultiColumnComboBox').value()) || 0,
            UomId: parseInt($('#freshWater_cmb_uom').data('kendoComboBox').value()) || null,
            StatusId: parseInt($('#freshWater_cmb_status').data('kendoComboBox').value()) || 0,
            BargeNameLookupId: parseInt($('#freshWater_cmb_bargeName').data('kendoComboBox').value()) || null,
            
            DateOfSupply: $('#freshWater_dateOfSupply').val() || null,
            ReceiptNumber: $('#freshWater_receiptNumber').val() || '',
            BargeOperatorName: $('#freshWater_bargeOperatorName').val() || '',
            Distance: parseFloat($('#freshWater_distance').val()) || 0.00,
            Quantity: parseFloat($('#freshWater_quantity').val()) || 0.00,
            IsVesselCallingLocation: $('#freshWater_isVesselCallingLocation').is(':checked'),
            
            TotAmt: parseFloat($('#freshWater_totAmt').val()) || 0,
            GstAmt: parseFloat($('#freshWater_gstAmt').val()) || 0,
            TotAmtAftGst: parseFloat($('#freshWater_totAmtAftGst').val()) || 0,
            Remarks: $('#freshWater_remarks').val() || '',
            
            DebitNoteId: parseInt($('#freshWater_debitNoteId').val()) || null,
            DebitNoteNo: $('#freshWater_debitNoteNo').val() || '',
            TaskId: 9, // Assuming TaskId 9 is for Fresh Water
        };

        $.ajax({
            url: '@Url.Action("SaveFreshWater", "Job", new { area = "Project" })',
            type: "POST",
            data: JSON.stringify({ freshWater: freshWaterData, companyId }),
            contentType: "application/json",
            success: function (response) {
                if (response.success) {
                    initializeFreshWaterGrid();
                    clearFreshWaterForm();
                    $('#addFreshWaterModal').modal('hide');
                } else {
                    alert(response.message || "Failed to save fresh water record.");
                }
            },
            error: function (xhr) {
                alert("Error: " + (xhr.responseJSON?.message || "An unexpected error occurred"));
            }
        });
    }

    // Calculate total amounts when quantity changes
    $('#freshWater_quantity').on('change', function() {
        calculateFreshWaterAmount();
    });

    function calculateFreshWaterAmount() {
        const quantity = parseFloat($('#freshWater_quantity').val()) || 0;
        // You would typically have a rate here to multiply by quantity
        const rate = 1.0; // Default rate, adjust as needed
        const totAmt = quantity * rate;
        const gstRate = 0.07; // Assuming 7% GST
        const gstAmt = totAmt * gstRate;
        const totAmtAftGst = totAmt + gstAmt;
        
        $('#freshWater_totAmt').val(totAmt.toFixed(2));
        $('#freshWater_gstAmt').val(gstAmt.toFixed(2));
        $('#freshWater_totAmtAftGst').val(totAmtAftGst.toFixed(2));
    }
</script>