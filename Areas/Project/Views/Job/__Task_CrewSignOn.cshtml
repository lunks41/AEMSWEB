<!-- CrewSignOn Modal -->
<div class="modal fade" id="addCrewSignOnModal" tabindex="-1" aria-labelledby="addCrewSignOnModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-scrollable modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCrewSignOnModalLabel">Crew Sign On</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Container replacing form tag -->
                <div id="crewSignOnContainer">
                    <input type="hidden" id="companyId" />
                    <input type="hidden" id="crewSignOn_jobOrderId" />
                    <input type="hidden" id="crewSignOn_jobOrderNo" />
                    <input type="hidden" id="crewSignOn_debitNoteId" />
                    <input type="hidden" id="crewSignOn_debitNoteNo" />
                    <input type="hidden" id="crewSignOnId" />

                    <div class="row">
                        <!-- Crew Information -->
                        <div class="col-md-3">
                            <label class="form-label">Date <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="crewSignOn_signOnDate">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Crew Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="crewSignOn_crewName">
                        </div>
                        <div class="col-md-3">
                            <label for="crewSignOn_cmb_gender" class="form-label">Gender</label>
                            <select id="crewSignOn_cmb_gender" style="width: 100%"></select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Rank <span class="text-danger">*</span></label>
                            <select id="crewSignOn_cmb_rankType" style="width: 100%"></select>
                        </div>
                    </div>

                      <div class="row mt-1">
                        <div class="col-md-3">
                            <label class="form-label">Nationality <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="crewSignOn_nationality">
                        </div>
                        <div class="col-md-3">
                            <label for="crewSignOn_cmb_charge" class="form-label">Charge<span class="text-danger">*</span></label>
                            <select id="crewSignOn_cmb_charge" style="width: 100%"></select>
                        </div>
                        <div class="col-md-3">
                            <label for="crewSignOn_cmb_gl" class="form-label">GL Account <span class="text-danger">*</span></label>
                            <select id="crewSignOn_cmb_gl" style="width: 100%"></select>
                        </div>
                        <div class="col-md-3">
                            <label for="crewSignOn_cmb_visaType" class="form-label">Visa Type<span class="text-danger">*</span></label>
                            <select id="crewSignOn_cmb_visaType" style="width: 100%"></select>
                        </div>
                    </div>

                      <div class="row mt-1">
                        <!-- Travel Information -->
                        <div class="col-md-3">
                            <label class="form-label">Flight Details <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="crewSignOn_flightDetails">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Ticket Number</label>
                            <input type="text" class="form-control" id="crewSignOn_ticketNo">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Hotel Name </label>
                            <input type="text" class="form-control" id="crewSignOn_hotelName">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Transport Name</label>
                            <input type="text" class="form-control" id="crewSignOn_transportName">
                        </div>
                    </div>

                      <div class="row mt-1">
                        <div class="col-md-3">
                            <label class="form-label">Clearing</label>
                            <input type="text" class="form-control" id="crewSignOn_clearing">
                        </div>

                        <!-- Financial Information -->

                        <div class="col-md-3">
                            <label for="crewSignOn_cmb_status" class="form-label">Status <span class="text-danger">*</span></label>
                            <select id="crewSignOn_cmb_status" style="width: 100%"></select>
                        </div>
                        <!-- Remarks -->
                        <div class="col-md-6">
                            <label class="form-label">Remarks</label>
                            <textarea class="form-control" id="crewSignOn_remarks" rows="2"></textarea>
                        </div>
                    </div>

                    <!-- Audit Fields -->
                    <div class="accordion mt-3" id="auditAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#auditCollapse">
                                    Audit Details
                                </button>
                            </h2>
                            <div id="auditCollapse" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Created By</label>
                                            <p id="crewSignOnCreateBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Created Date</label>
                                            <p id="crewSignOnCreateDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Modified By</label>
                                            <p id="crewSignOnEditBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Modified Date</label>
                                            <p id="crewSignOnEditDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Edit Version</label>
                                            <p id="crewSignOnEditVersion" class="form-control-plaintext"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End of container -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="btnCrewSignOnClear" onclick="clearCrewSignOnForm()">Clear</button>
                <button type="button" class="btn btn-primary" id="btnCrewSignOnSave" onclick="saveCrewSignOn()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
    function refreshCrewSignOnDropdown() {
        const chartOfAccountUrl = '@Url.Action("GetChartOfAccountLookup", "Lookup", new { area = "" })?companyId=' + companyId;
        const glcolumnsProperties = [
            { field: 'glCode', title: 'Code', width: 100 },
            { field: 'glName', title: 'Name', width: 200 }
        ];
        const glfilterFields = ['glCode', 'glName'];
        bindMultiColumnComboBox(chartOfAccountUrl, "crewSignOn_cmb_gl", "glName", "glId", glcolumnsProperties, glfilterFields);

        const chargeUrl = `@Url.Action("GetChargeLookup", "Lookup", new { area = "" })?companyId=${companyId}&taskId=7`;
        bindComboBox(chargeUrl, "crewSignOn_cmb_charge", "chargeName", "chargeId");

        const statusUrl = `@Url.Action("GetOrderTypeLookup", "Lookup", new { area = "" })?companyId=${companyId}&categoryId=4`;
        bindComboBox(statusUrl, "crewSignOn_cmb_status", "orderTypeName", "orderTypeId");

        const genderUrl = `@Url.Action("GetOrderTypeLookup", "Lookup", new { area = "" })?companyId=${companyId}&categoryId=3`;
        bindComboBox(genderUrl, "crewSignOn_cmb_gender",  "orderTypeName", "orderTypeId");

        const visaTypeUrl = `@Url.Action("GetOrderTypeLookup", "Lookup", new { area = "" })?companyId=${companyId}&categoryId=1`;
        bindComboBox(visaTypeUrl, "crewSignOn_cmb_visaType",  "orderTypeName", "orderTypeId");

        const rankTypeUrl = `@Url.Action("GetOrderTypeLookup", "Lookup", new { area = "" })?companyId=${companyId}&categoryId=15`;
        bindComboBox(rankTypeUrl, "crewSignOn_cmb_rankType",  "orderTypeName", "orderTypeId");
    }

    function clearCrewSignOnForm() {
        $('#crewSignOnId').val('');
        $('#crewSignOn_jobOrderId').val('');
        $('#crewSignOn_jobOrderNo').val('');
        $('#crewSignOn_debitNoteId').val('');
        $('#crewSignOn_debitNoteNo').val('');

        // Clear dropdowns
        $('#crewSignOn_cmb_gl').data('kendoMultiColumnComboBox').value('');
        $('#crewSignOn_cmb_charge').data('kendoComboBox').value('');
        $('#crewSignOn_cmb_status').data('kendoComboBox').value('');
        $('#crewSignOn_cmb_gender').data('kendoComboBox').value('');
        $('#crewSignOn_cmb_visaType').data('kendoComboBox').value('');
         $('#crewSignOn_cmb_rankType').data('kendoComboBox').value('');

        // Clear text inputs
        $('#crewSignOn_crewName').val('');
        $('#crewSignOn_position').val('');
        $('#crewSignOn_rankId').val('');
        $('#crewSignOn_nationality').val('');
        $('#crewSignOn_signOnDate').val('');
        $('#crewSignOn_flightDetails').val('');
        $('#crewSignOn_ticketNo').val('');
        $('#crewSignOn_hotelName').val('');
        $('#crewSignOn_transportName').val('');
        $('#crewSignOn_clearing').val('');
        $('#crewSignOn_totAmt').val('0.00');
        $('#crewSignOn_gstAmt').val('0.00');
        $('#crewSignOn_totAmtAftGst').val('0.00');
        $('#crewSignOn_remarks').val('');

        // Clear audit fields
        $('#crewSignOnCreateBy').text('');
        $('#crewSignOnCreateDate').text('');
        $('#crewSignOnEditBy').text('');
        $('#crewSignOnEditDate').text('');
        $('#crewSignOnEditVersion').text('');

        $('#btnCrewSignOnClear').show();
    }

    function setDefaultCrewSignOnValues() {
        // Set current date for sign on date
        const today = new Date().toISOString().split('T')[0];
        $('#crewSignOn_signOnDate').val(today);

        // Set default GL Account
        setTimeout(() => {
            const glCombo = $('#crewSignOn_cmb_gl').data('kendoMultiColumnComboBox');
            if (glCombo.dataSource.view().length > 0) {
                glCombo.select(0);
            }
        }, 100);

        // Set default to first charge
        setTimeout(() => {
            const chargeCombo = $('#crewSignOn_cmb_charge').data('kendoComboBox');
            if (chargeCombo.dataSource.view().length > 0) {
                chargeCombo.select(0);
            }
        }, 100);

        // Set default status to "Confirm"
        setTimeout(() => {
            const statusCombo = $('#crewSignOn_cmb_status').data('kendoComboBox');
            const confirmItem = statusCombo.dataSource.data().find(item =>
                item.orderTypeName.toLowerCase() === "confirmed"
            );
            if (confirmItem) {
                statusCombo.value(confirmItem.orderTypeId);
            }
        }, 100);
    }

    function openCrewSignOnModal(jobOrderId, jobOrderNo, crewSignOnId, mode) {
        const $modal = $('#addCrewSignOnModal');
        const parsedJobOrderId = parseInt(jobOrderId, 10);
        const parsedCrewSignOnId = parseInt(crewSignOnId, 10);
        $('#crewSignOn_jobOrderId').val(jobOrderId);
        $('#crewSignOn_jobOrderNo').val(jobOrderNo);

        const isValidId = id => !isNaN(id) && id !== null && id !== "" && id > 0;

        // Edit Mode: Fetch existing data and populate the form
        if (isValidId(parsedJobOrderId) && isValidId(parsedCrewSignOnId)) {
            $modal.find('.modal-content').append('<div class="modal-overlay"><div class="spinner"></div></div>');

            $.get('@Url.Action("GetCrewSignOnById", "Job", new { area = "Project" })', {
                jobOrderId: parsedJobOrderId,
                crewSignOnId: parsedCrewSignOnId,
                companyId: $('#companyId').val()
            })
                .done(function (response) {
                    if (response.success) {
                        refreshCrewSignOnDropdown();
                        clearCrewSignOnForm();
                        populateCrewSignOnModalFields(response.data);
                        $('#addCrewSignOnModal').modal('show');
                    }
                })
                .always(() => $modal.find('.modal-overlay').remove());
        } else {
            // Add Mode: Clear form and set default values
            refreshCrewSignOnDropdown();
            clearCrewSignOnForm();
            setDefaultCrewSignOnValues();

            $('#addCrewSignOnModal').modal('show');
        }
    }

    function populateCrewSignOnModalFields(data) {
        // Set hidden fields
        $('#companyId').val(data.companyId);
        $('#crewSignOnId').val(data.crewSignOnId);
        $('#crewSignOn_jobOrderId').val(data.jobOrderId);
        $('#crewSignOn_jobOrderNo').val(data.jobOrderNo);
        $('#crewSignOn_debitNoteId').val(data.debitNoteId);
        $('#crewSignOn_debitNoteNo').val(data.debitNoteNo);

        // Set date fields
        if (data.signOnDate) {
            const signOnDate = new Date(data.signOnDate).toLocaleDateString('en-CA');
            $('#crewSignOn_signOnDate').val(signOnDate);
        }

        // Set combobox values, ensuring they update after data is loaded
        const chargeCombo = $('#crewSignOn_cmb_charge').data('kendoComboBox');
        chargeCombo.value(data.chargeId > 0 ? data.chargeId : '');
        chargeCombo.one('dataBound', function () {
            chargeCombo.value(data.chargeId > 0 ? data.chargeId : '');
        });

        const glCombo = $('#crewSignOn_cmb_gl').data('kendoMultiColumnComboBox');
        glCombo.value(data.glId > 0 ? data.glId : '');
        glCombo.one('dataBound', function () {
            glCombo.value(data.glId > 0 ? data.glId : '');
        });

        const statusCombo = $('#crewSignOn_cmb_status').data('kendoComboBox');
        statusCombo.value(data.statusId > 0 ? data.statusId : '');
        statusCombo.one('dataBound', function () {
            statusCombo.value(data.statusId > 0 ? data.statusId : '');
        });

        const genderCombo = $('#crewSignOn_cmb_gender').data('kendoComboBox');
        genderCombo.value(data.genderId > 0 ? data.genderId : '');
        genderCombo.one('dataBound', function () {
            genderCombo.value(data.genderId > 0 ? data.genderId : '');
        });

        const visaTypeCombo = $('#crewSignOn_cmb_visaType').data('kendoComboBox');
        visaTypeCombo.value(data.visaTypeId > 0 ? data.visaTypeId : '');
        visaTypeCombo.one('dataBound', function () {
            visaTypeCombo.value(data.visaTypeId > 0 ? data.visaTypeId : '');
        });

         const rankTypeCombo = $('#crewSignOn_cmb_rankType').data('kendoComboBox');
        rankTypeCombo.value(data.rankTypeId > 0 ? data.rankTypeId : '');
        rankTypeCombo.one('dataBound', function () {
            rankTypeCombo.value(data.rankTypeId > 0 ? data.rankTypeId : '');
        });

        // Set text fields
        $('#crewSignOn_crewName').val(data.crewName);
        $('#crewSignOn_position').val(data.position);
        $('#crewSignOn_rankId').val(data.rankId);
        $('#crewSignOn_nationality').val(data.nationality);
        $('#crewSignOn_flightDetails').val(data.flightDetails);
        $('#crewSignOn_ticketNo').val(data.ticketNo);
        $('#crewSignOn_hotelName').val(data.hotelName);
        $('#crewSignOn_transportName').val(data.transportName);
        $('#crewSignOn_clearing').val(data.clearing);
        $('#crewSignOn_totAmt').val(data.totAmt);
        $('#crewSignOn_gstAmt').val(data.gstAmt);
        $('#crewSignOn_totAmtAftGst').val(data.totAmtAftGst);
        $('#crewSignOn_remarks').val(data.remarks);

        // Set audit fields
        $('#crewSignOnCreateBy').text(data.createBy || "N/A");
        $('#crewSignOnCreateDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
        $('#crewSignOnEditBy').text(data.editBy || "N/A");
        $('#crewSignOnEditDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");
        $('#crewSignOnEditVersion').text(data.editVersion || "0");

        // Hide clear button in edit mode
        $('#btnCrewSignOnClear').hide();

        // Enable/disable fields based on debitNoteId
        if (data.debitNoteId > 0) {
            // Disable dropdowns
            chargeCombo.enable(false);
            glCombo.enable(false);
            statusCombo.enable(false);
            genderCombo.enable(false);
            visaTypeCombo.enable(false);
            rankTypeCombo.enable(false);

            // Disable inputs
            $('input, textarea').not('#btnCrewSignOnSave').prop('readonly', true);
            $('#btnCrewSignOnSave').prop('disabled', false);
        } else {
            // Enable all controls
            chargeCombo.enable(true);
            glCombo.enable(true);
            statusCombo.enable(true);
            genderCombo.enable(true);
            visaTypeCombo.enable(true);
             rankTypeCombo.enable(true);

            // Enable inputs
            $('input, textarea').not('#crewSignOn_gstAmt, #crewSignOn_totAmtAftGst').prop('readonly', false);
            $('#btnCrewSignOnSave').prop('disabled', false);
        }
    }

    function deleteCrewSignOn(jobOrderId, crewSignOnId) {
        showDeleteModal("Are you sure you want to delete this record?", function () {
            $.ajax({
                url: '@Url.Action("DeleteCrewSignOn", "Job", new { area = "Project" })',
                type: "DELETE",
                data: { jobOrderId, crewSignOnId, companyId: companyId },
                success: function (response) {
                    if (response.success) {
                        loadCrewSignOnGrid();
                        $('#confirmationModal').modal('hide');
                    }
                }
            });
        });
    }

    function saveCrewSignOn() {
        let crewSignOnData = {
            CrewSignOnId: parseInt($('#crewSignOnId').val()) || 0,
            JobOrderId: parseInt($('#crewSignOn_jobOrderId').val()) || 0,
            JobOrderNo: $('#crewSignOn_jobOrderNo').val() || '',
            ChargeId: parseInt($('#crewSignOn_cmb_charge').data('kendoComboBox').value()) || null,
            GLId: parseInt($('#crewSignOn_cmb_gl').data('kendoMultiColumnComboBox').value()) || 0,
            StatusId: parseInt($('#crewSignOn_cmb_status').data('kendoComboBox').value()) || 0,
            GenderId: parseInt($('#crewSignOn_cmb_gender').data('kendoComboBox').value()) || null,
            VisaTypeId: parseInt($('#crewSignOn_cmb_visaType').data('kendoComboBox').value()) || null,
            RankTypeId: parseInt($('#crewSignOn_cmb_rankType').data('kendoComboBox').value()) || null,

            CrewName: $('#crewSignOn_crewName').val() || '',
            Position: $('#crewSignOn_position').val() || '',
            RankId: $('#crewSignOn_rankId').val() || '',
            Nationality: $('#crewSignOn_nationality').val() || '',
            SignOnDate: $('#crewSignOn_signOnDate').val() || '',
            FlightDetails: $('#crewSignOn_flightDetails').val() || '',
            TicketNo: $('#crewSignOn_ticketNo').val() || '',
            HotelName: $('#crewSignOn_hotelName').val() || '',
            TransportName: $('#crewSignOn_transportName').val() || '',
            Clearing: $('#crewSignOn_clearing').val() || '',

            TotAmt: parseFloat($('#crewSignOn_totAmt').val()) || 0,
            GstAmt: parseFloat($('#crewSignOn_gstAmt').val()) || 0,
            TotAmtAftGst: parseFloat($('#crewSignOn_totAmtAftGst').val()) || 0,
            Remarks: $('#crewSignOn_remarks').val() || '',

            DebitNoteId: parseInt($('#crewSignOn_debitNoteId').val()) || null,
            DebitNoteNo: $('#crewSignOn_debitNoteNo').val() || '',
            TaskId: 7, // Assuming TaskId 7 is for Crew Sign On
        };

        $.ajax({
            url: '@Url.Action("SaveCrewSignOn", "Job", new { area = "Project" })',
            type: "POST",
            data: JSON.stringify({ crewSignOn: crewSignOnData, companyId }),
            contentType: "application/json",
            success: function (response) {
                if (response.success) {
                    initializeCrewSignOnGrid();
                    clearCrewSignOnForm();
                    $('#addCrewSignOnModal').modal('hide');
                } else {
                    alert(response.message || "Failed to save crew sign on.");
                }
            },
            error: function (xhr) {
                alert("Error: " + (xhr.responseJSON?.message || "An unexpected error occurred"));
            }
        });
    }

    // Calculate GST amounts when total amount changes
    $('#crewSignOn_totAmt').on('change', function() {
        const amount = parseFloat($(this).val()) || 0;
        const gstRate = 0.07; // Assuming 7% GST

        const gstAmt = amount * gstRate;
        const totAmtAftGst = amount + gstAmt;

        $('#crewSignOn_gstAmt').val(gstAmt.toFixed(2));
        $('#crewSignOn_totAmtAftGst').val(totAmtAftGst.toFixed(2));
    });
</script>