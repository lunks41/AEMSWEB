@{
    ViewData["Title"] = "Job";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <!-- Header Section -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3 class="card-title mb-0">Job Management</h3>
                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-light btn-sm" id="refreshGrid" onclick="loadJobOrderGrid()" data-bs-toggle="tooltip" title="Refresh">
                            <span class="material-symbols-outlined">refresh</span>
                        </button>
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addJobOrderModal" id="addJobOrderrecord">
                            <span class="material-symbols-outlined me-1">add</span> New Job
                        </button>
                    </div>
                </div>

                <!-- Filter Section -->
                <div class="filter-section bg-light p-3 rounded mb-4">
                    <div class="row g-3 align-items-center">
                        <div class="col-md-3">
                            <input type="text" id="txtsearch" class="form-control form-control-sm shadow-sm"
                                   placeholder="Search jobs..." onkeydown="handleEnterKey(event)">
                        </div>
                        <div class="col-md-3">
                            <select id="customerDropdown" class="form-select form-select-sm shadow-sm">
                                <option value="">All Customers</option>
                                @* Populate dynamically via JS *@
                            </select>
                        </div>
                        <div class="col-md-4">
                            <div class="input-group input-group-sm shadow-sm">
                                <span class="input-group-text bg-white border-end-0"><small>From</small></span>
                                <input type="date" id="fromDate" class="form-control">
                                <span class="input-group-text bg-white border-start-0 border-end-0"><small>To</small></span>
                                <input type="date" id="toDate" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary btn-sm w-100" onclick="loadJobOrderGrid()">
                                    <span class="material-symbols-outlined align-middle">search</span>
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearSearch()">
                                    <span class="material-symbols-outlined align-middle">close</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Status Tabs -->
                <ul class="nav nav-pills mb-3 status-tabs" id="jobOrderTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" data-status="all" data-bs-toggle="tab">
                            <span class="badge bg-secondary me-1">150</span> All Jobs
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-status="pending" data-bs-toggle="tab">
                            <span class="badge bg-warning me-1">15</span> Pending
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-status="confirm" data-bs-toggle="tab">
                            <span class="badge bg-primary me-1">30</span> Confirmed
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-status="completed" data-bs-toggle="tab">
                            <span class="badge bg-success me-1">90</span> Completed
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-status="cancel" data-bs-toggle="tab">
                            <span class="badge bg-danger me-1">10</span> Canceled
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-status="post" data-bs-toggle="tab">
                            <span class="badge bg-info me-1">5</span> Posted
                        </button>
                    </li>
                </ul>

                <!-- Grid Section -->
                <div class="grid-wrapper border rounded">
                    <div id="gridJobOrder" class="ag-theme-alpine" style="height: 500px;"></div>
                </div>

                <!-- Loading State -->
                <div class="loading-overlay" id="loadingOverlay">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .filter-section {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
    }

    .status-tabs .nav-link {
        border-radius: 20px;
        padding: 8px 20px;
        margin-right: 8px;
        transition: all 0.3s ease;
        border: 1px solid transparent;
    }

        .status-tabs .nav-link.active {
            transform: translateY(-2px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

    .grid-wrapper {
        overflow: hidden;
        position: relative;
    }

    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.8);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }
</style>
@section Scripts {
    <script>
     let companyId = 0;
    let permissions = {};
    $(document).ready(function () {
        companyId = getUrlParameter('companyId') || 0;
        loadJobOrderGrid();
    });

    function loadJobOrderGrid() {
        let searchString = $('#txtsearch').val();
        let url = '@Url.Action("JobOrderList", "Job", new { area = "Project" })';
        let columns = [
            {
                title: "Actions",
                width: "150px",
                template: function (dataItem) {
                    let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openCustomerModal('${dataItem.jobOrderId}', 'view')">
                 <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                    if (permissions.canEdit) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openCustomerModal('${dataItem.jobOrderId}', 'edit')">
                 <i class="material-symbols-outlined text-warning">edit</i></button>`;
                    }

                    if (permissions.canDelete) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deleteCustomer('${dataItem.jobOrderId}')">
                 <i class="material-symbols-outlined text-danger">delete</i></button>`;
                    }
                    return buttons;
                }
            },
            { field: "jobOrderNo", title: "jobOrderNo" },
            { field: "jobOrderDate", title: "jobOrderDate" },
            { field: "customerName", title: "customerName" },
            { field: "currencyName", title: "currencyName" },
            { field: "iMONo", title: "iMONo" },
            { field: "totalAmt", title: "totalAmt" },
            { field: "totalLocalAmt", title: "totalLocalAmt" },
            { field: "remarks", title: "remarks" }
        ];

        initializeKendoGrid("gridJobOrder", url, { searchString, companyId }, columns);
    }
    </script>
}