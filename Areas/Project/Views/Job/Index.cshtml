<style>
    /* CSS from Checklist Screen and Modal sections */
    .checklist-container {
        padding: 20px;
    }

    .search-filter {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .checklist-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
    }

    .checklist-item {
        padding: 15px;
        background: #f0f0f0;
        border-radius: 5px;
        cursor: pointer;
    }

    .status {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
    }

        .status.pending {
            background: red;
        }

        .status.completed {
            background: green;
        }

    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background: white;
        width: 90%;
        height: 90%;
        padding: 20px;
        border-radius: 10px;
        overflow-y: auto;
    }

    .modal-tabs {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .tab {
        padding: 10px;
        background: #ddd;
        border: none;
        cursor: pointer;
    }

        .tab.active {
            background: #007bff;
            color: white;
        }

    .tab-content {
        padding: 20px;
    }
</style>

<!-- Checklist Screen -->
<div class="checklist-container">
    <h2>Project Checklist</h2>
    <div class="search-filter">
        <input type="text" placeholder="Search checklists..." />
        <select>
            <option>All</option>
            <option>Pending</option>
            <option>Completed</option>
        </select>
    </div>
    <div class="checklist-list">
        @*@foreach (var checklist in Model.Checklists)
            {
                <div class="checklist-item" data-id="@checklist.Id">
                    <span>@checklist.Name (@checklist.TaskCount)</span>
                    <span class="status @checklist.Status.ToLower()"></span>
                </div>
            }*@
    </div>
    <button class="add-checklist">+ Add New Checklist</button>
</div>

<!-- Full-Screen Modal -->
<div class="modal" id="checklistModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="modalTitle">Checklist Title</h3>
            <button class="close-modal">X</button>
        </div>
        <div class="modal-tabs">
            <button class="tab active" data-tab="checklist">Checklist</button>
            <button class="tab" data-tab="update">Update Checklist</button>
        </div>
        <div class="modal-body">
            <div class="tab-content" id="checklistTab">
                <table>
                    <thead>
                        <tr>
                            <th>Task Name</th>
                            <th>Status</th>
                            <th>Documents</th>
                            <th>Due Date</th>
                        </tr>
                    </thead>
                    <tbody id="checklistTasks"></tbody>
                </table>
                <div class="documents">
                    <h4>Documents</h4>
                    <ul id="documentList"></ul>
                </div>
                <div class="progress">
                    <span id="progressText">0% (0/0 tasks completed)</span>
                    <progress id="progressBar" value="0" max="100"></progress>
                </div>
            </div>
            <div class="tab-content" id="updateTab" style="display: none;">
                <table>
                    <thead>
                        <tr>
                            <th><input type="checkbox" id="selectAll" /></th>
                            <th>Task Name</th>
                            <th>Status</th>
                            <th>Documents</th>
                            <th>Comments</th>
                        </tr>
                    </thead>
                    <tbody id="updateTasks"></tbody>
                </table>
                <div class="upload-section">
                    <h4>Upload Document</h4>
                    <input type="file" id="fileUpload" accept=".pdf,.jpg" />
                    <button id="uploadButton">Upload</button>
                </div>
                <button class="add-task">+ Add New Task</button>
            </div>
        </div>
        <div class="modal-footer">
            <button class="save">Save</button>
            <button class="cancel">Cancel</button>
        </div>
    </div>
</div>

<script>
    // JavaScript from Modal Trigger, Tab Switching, and Document Upload sections
    document.querySelectorAll('.checklist-item').forEach(item => {
        item.addEventListener('click', function () {
            const checklistId = this.getAttribute('data-id');
            openChecklistModal(checklistId);
        });
    });

    document.querySelectorAll('.tab').forEach(tab => {
        tab.addEventListener('click', function () {
            document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
            this.classList.add('active');
            document.querySelectorAll('.tab-content').forEach(content => content.style.display = 'none');
            document.getElementById(this.getAttribute('data-tab') + 'Tab').style.display = 'block';
        });
    });

    function openChecklistModal(checklistId) {
        document.getElementById('checklistModal').style.display = 'flex';
    }

    document.querySelector('.close-modal').addEventListener('click', function () {
        document.getElementById('checklistModal').style.display = 'none';
    });

    document.getElementById('uploadButton').addEventListener('click', function () {
        const file = document.getElementById('fileUpload').files[0];
        if (file) {
            console.log('Uploading:', file.name);
            const li = document.createElement('li');
            li.textContent = file.name;
            document.getElementById('documentList').appendChild(li);
        }
    });
</script>