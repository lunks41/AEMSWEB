<div class="row g-3">
    <div class="d-flex justify-content-between mb-3">
        <button class="btn btn-primary" data-bs-toggle="modal" id="addusergrouprecord" data-bs-target="#addUserGroupModal">
            <i class="fas fa-plus"></i> Add User Group
        </button>
    </div>
    <div id="usergroupgrid"></div>
</div>

<!-- Add/Edit User Group Modal -->
<div class="modal fade" id="addUserGroupModal" tabindex="-1" aria-labelledby="addUserGroupModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addaddUserGroupModalModalLabel">Add User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearUserGroupForm();"></button>
            </div>
            <div class="modal-body p-4">
                <form id="userGroupForm">
                    <input type="hidden" id="userGroupId" />
                    <div class="row g-3">
                        <!-- User Group Information -->
                        <div class="col-md-6">
                            <label class="form-label">User Group Code</label>
                            <input type="text" class="form-control" id="userGroupCode"
                                   placeholder="Enter group code" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">User Group Name</label>
                            <input type="text" class="form-control" id="userGroupName"
                                   placeholder="Enter group name" required>
                        </div>

                        <!-- Status and Remarks -->
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isGroupActive" checked>
                                <label class="form-check-label" for="isGroupActive">
                                    Active Group
                                </label>
                            </div>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Remarks</label>
                            <textarea class="form-control" id="groupRemarks" rows="3"
                                      placeholder="Add group description..."></textarea>
                        </div>
                    </div>

                    <!-- Audit Fields -->
                    <div class="accordion mt-3" id="auditAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#auditCollapse">
                                    Audit Details
                                </button>
                            </h2>
                            <div id="auditCollapse" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="createBy" class="form-label">Created By</label>
                                            <p id="createBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="createDate" class="form-label">Created Date</label>
                                            <p id="createDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="editBy" class="form-label">Modified By</label>
                                            <p id="editBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="editDate" class="form-label">Modified Date</label>
                                            <p id="editDate" class="form-control-plaintext"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btnUserGroupEdit">Edit</button>
                    <button type="button" class="btn btn-primary" id="btnUserGroupSave" onclick="saveUserGroup()">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function loadUserGroupGrid() {

        let searchString = $('#txtsearch').val();
        let url = '@Url.Action("UserGroupList", "User", new { area = "Admin" })';
        let columns = [
            {
                title: "Actions",
                width: "150px",
                template: function (dataItem) {
                    let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openModal('${dataItem.userGroupId}', 'view')">
                        <i class="material-symbols-outlined text-primary">visibility</i></button>`;
                    if (permissions.canEdit) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openModal('${dataItem.userGroupId}', 'edit')">
                            <i class="material-symbols-outlined text-warning">edit</i></button>`;
                    }
                    if (permissions.canDelete) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deleteUserGroup('${dataItem.userGroupId}')">
                            <i class="material-symbols-outlined text-danger">delete</i></button>`;
                    }
                    return buttons;
                }
            },
            { field: "userGroupCode", title: "Code" },
            { field: "userGroupName", title: "Name" },
            { field: "userGroupGroupName", title: "Group Name" },
            { field: "remarks", title: "Remarks" },
            { field: "isActive", title: "Active", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
        ];
        initializeKendoGrid("usergroupgrid", url, { searchString, companyId }, columns);
    }

    function openModal(id, mode) {
        $.get('@Url.Action("GetUserGroupById", "User", new { area = "Admin" })', { selectedUserGroupId: id, companyId })
            .done(function (response) {
                if (response.success) {
                    populateModalFields(response.data);
                    setMode(mode);
                    $('#addUserGroupModal').modal('show');
                }
            });
    }

    function populateModalFields(data) {
        $('#userGroupId').val(data.userGroupId);
        $('#userGroupCode').val(data.userGroupCode);
        $('#userGroupName').val(data.userGroupName);
        $('#remarks').val(data.remarks);
        $('#isActive').prop('checked', data.isActive);

        $('#createBy').text(data.createBy || "N/A");
        $('#createDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
        $('#editBy').text(data.editBy || "N/A");
        $('#editDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");

        // checkMandatoryFields();
    }

    function setMode(mode) {
        const isView = mode === 'view';
        const canEdit = permissions.canEdit && !isView;

        $('#userGroupCode, #userGroupName, #remarks').prop('readonly', !canEdit);

        $('#isActive').prop('disabled', !canEdit);
        $('#btnUserGroupSave').toggle(canEdit);
        $('#btnUserGroupEdit').toggle(isView && permissions.canEdit);
        $('#btnClose').show();
        $('#btnClear').hide();
    }

    function setDefaultUserGroupValues() {
        clearUserGroupForm();
        document.getElementById('isActive').checked = true;
        document.getElementById('btnUserGroupSave').disabled = false;
    }

    function clearUserGroupForm() {

        $('#userGroupForm')[0].reset();
        $('#userGroupId').val(0);
        $('#btnUserGroupSave').prop('disabled', true);
    }

    function deleteUserGroup(id) {
        if (!permissions.canDelete) {
            alert('You do not have permission to delete records.');
            return;
        }

        $('#confirmationModal').modal('show');
        $('#confirmDelete').off('click').click(function () {
            $.ajax({
                url: `/Admin/User/DeleteUserGroup?selectedUserGroupId=${id}&companyId=${companyId}`,
                type: "DELETE",
                success: function (response) {
                    if (response.success) {
                        loadUserGroupGrid();
                        $('#confirmationModal').modal('hide');
                    }
                }
            });
        });
    }

    function saveUserGroup() {
        let data = {
            UserGroupId: parseInt($('#userGroupId').val()) || 0,
            UserGroupCode: $('#userGroupCode').val().trim(),
            UserGroupName: $('#userGroupName').val().trim(),
            Remarks: $('#remarks').val(),
            IsActive: $('#isActive').prop('checked')
        };

        if (!data.UserGroupCode || !data.UserGroupName) {
            alert('Code and Name are required!');
            return;
        }

        $.ajax({
            url: '@Url.Action("SaveUserGroup", "User", new { area = "Admin" })',
            type: "POST",
            data: JSON.stringify({ modal: data }),
            contentType: "application/json",
            success: function (response) {
                if (response.success) {
                    $('#addUserGroupModal').modal('hide');
                    loadGrid();
                    clearForm();
                }
            },
            error: function (error) {
                alert("Error: " + error.responseText);
            }
        });
    }
</script>