@{
    ViewData["Title"] = $"Account Setup ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    bool canCreate = ViewBag.IsCreate ?? false;
    bool canEdit = ViewBag.IsEdit ?? false;
    bool canDelete = ViewBag.IsDelete ?? false;
    bool canRead = ViewBag.IsRead ?? false;
    bool canExport = ViewBag.IsExport ?? false;
    bool canPrint = ViewBag.IsPrint ?? false;
    int companyId = ViewBag.CompanyId;
}

<!-- Nav Pills -->
<ul class="nav nav-pills mb-3" id="accountSetupTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="accountsetup-tab" data-bs-toggle="pill"
                data-bs-target="#accountsetup" type="button" role="tab" aria-controls="accountsetup" aria-selected="true">
            <i class="mdi mdi-account-cog me-1"></i> Account Setup
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="accountsetupdt-tab" data-bs-toggle="pill"
                data-bs-target="#accountsetupdt" type="button" role="tab" aria-controls="accountsetupdt" aria-selected="false">
            <i class="mdi mdi-table-large me-1"></i> Setup Details
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="accountsetupcategory-tab" data-bs-toggle="pill"
                data-bs-target="#accountsetupcategory" type="button" role="tab" aria-controls="accountsetupcategory" aria-selected="false">
            <i class="mdi mdi-shape-outline me-1"></i> Categories
        </button>
    </li>
</ul>

<!-- Tab Content -->
<div class="tab-content" id="accountSetupTabsContent">
    <div class="tab-pane fade show active" id="accountsetup" role="tabpanel" aria-labelledby="accountsetup-tab">
        @await Html.PartialAsync("_AccountSetup")
    </div>
    <div class="tab-pane fade" id="accountsetupdt" role="tabpanel" aria-labelledby="accountsetupdt-tab">
        @await Html.PartialAsync("_AccountSetupDt")
    </div>
    <div class="tab-pane fade" id="accountsetupcategory" role="tabpanel" aria-labelledby="accountsetupcategory-tab">
        @await Html.PartialAsync("_AccountSetupCategory")
    </div>
</div>

@section Scripts {
    <script>

    let companyId = 0;
    let permissions = {};
    $(document).ready(function () {
        companyId = getUrlParameter('companyId') || 0;
        
        permissions = {
            canCreate: @Json.Serialize(canCreate),
            canEdit: @Json.Serialize(canEdit),
            canDelete: @Json.Serialize(canDelete),
            canRead: @Json.Serialize(canRead),
        };

        Refresh();
        loadAccountSetupCategoryGrid();
        loadAccountSetupGrid();
        loadAccountSetupDtGrid();
    });

        function Refresh() {
            const chartOfAccountUrl = '@Url.Action("GetChartOfAccountLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            const columnsProperties = [
                { field: 'glCode', title: 'Code', width: 100 },
                { field: 'glName', title: 'Name', width: 200 }
            ];
            const filterFields = ['glCode', 'glName'];
            BindMultiColumnComboBox(chartOfAccountUrl, "cmb_glcode", "glName", "glId", columnsProperties, filterFields);

            const currencyUrl = '@Url.Action("GetCurrencyLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            BindComboBox(currencyUrl, "cmd_currency", "currencyName", "currencyId");

            const accountSetupUrl = '@Url.Action("GetAccountSetupLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            BindComboBox(accountSetupUrl, "cmd_accSetup", "accSetupName", "accSetupId");

            const accountSetupCategoryUrl = '@Url.Action("GetAccountSetupCategoryLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            BindComboBox(accountSetupCategoryUrl, "cmd_accSetupCategory", "accSetupCategoryName", "accSetupCategoryId");

        }

        function SelectedDropdown(DrpdwnName) { }

        function OnSelectDropdown(dataItem, DrpdwnName) { }


        $('#btnAccountSetupEdit').on('click', function () { setMode("edit"); });
        $('#btnAccountSetupClose').on('click', function () { $('#accountSetupModal').modal('hide'); });
        $('#btnAccountSetupDtEdit').on('click', function () { setMode("edit"); });
        $('#btnAccountSetupDtClose').on('click', function () { $('#accountSetupDtModal').modal('hide'); });
        $('#btnAccountSetupCategoryEdit').on('click', function () { setMode("edit"); });
        $('#btnAccountSetupCategoryClose').on('click', function () { $('#accountSetupCategoryModal').modal('hide'); });
        // For Account Setup tab
        $('#addaccountSetuprecord').on('click', function () {
            clearAccountSetupForm();        // Updated function name
            setAccountSetupDefaultValues(); // Updated function name
            $('#accountSetupModal').modal('show');
        });

        // For Setup Details tab
        $('#addaccountSetupDtrecord').on('click', function () {
            clearAccountSetupDtForm();      // Ensure this function exists in _AccountSetupDt.cshtml
            setAccountSetupDtDefaultValues();
            $('#accountSetupDtModal').modal('show');
        });

        // For Category tab
        $('#addaccountSetupCategoryrecord').on('click', function () {
            clearAccountSetupCategoryForm(); // Updated function name
            setAccountSetupCategoryDefaultValues();
            $('#accountSetupCategoryModal').modal('show');
        });
       
    </script>
}