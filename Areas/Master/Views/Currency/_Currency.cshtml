<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h3>Currencies</h3>
                <div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-3">
                    <div class="d-flex flex-grow-1 gap-2 align-items-center me-3">
                        <div style="width: 150px;">
                            <input type="text" id="txtsearch" class="form-control" placeholder="Search..." onkeydown="handleEnterKey(event)">
                        </div>
                        <button type="button" class="btn btn-primary" onclick="loadCurrencyGrid();">
                            <i class="mdi mdi-magnify"></i> Search
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="clearCurrencySearch();">
                            <i class="mdi mdi-close"></i> Clear
                        </button>
                    </div>
                    <div class="ms-auto">
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#currencyModal">
                            <i class="mdi mdi-plus me-1"></i> Add Currency
                        </button>
                    </div>
                </div>
                <div id="currencyGrid"></div>
            </div>
        </div>
    </div>
</div>

<!-- Currency Modal -->
<div class="modal fade" id="currencyModal" tabindex="-1" aria-labelledby="currencyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="currencyModalLabel">Currency Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearCurrencyForm()"></button>
            </div>
            <div class="modal-body p-4">
                <form id="currencyForm">
                    <input type="hidden" id="currencyId" />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="currencyCode" class="form-label">Code <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="currencyCode" maxlength="5" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="currencyName" class="form-label">Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="currencyName" maxlength="50" required>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="remarks" class="form-label">Remarks</label>
                                <textarea class="form-control" id="remarks" rows="2" maxlength="500"></textarea>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="IsMultiply">
                                <label class="form-check-label" for="isMultiply">Is Multiply</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="IsActive">
                                <label class="form-check-label" for="isActive">Is Active</label>
                            </div>
                        </div>
                    </div>
                    <!-- Audit Section -->
                    <div class="accordion mt-3" id="currencyAudit">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#currencyAuditBody">
                                    Audit Details
                                </button>
                            </h2>
                            <div id="currencyAuditBody" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Created By</label>
                                            <p id="createBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Created Date</label>
                                            <p id="createDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Modified By</label>
                                            <p id="editBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Modified Date</label>
                                            <p id="editDate" class="form-control-plaintext"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="clearCurrencyForm()">Close</button>
                <button type="button" class="btn btn-primary" id="btnCurrencyEdit">Edit</button>
                <button type="button" class="btn btn-secondary" onclick="clearCurrencyForm()">Clear</button>
                <button type="button" class="btn btn-primary" id="btnCurrencySave" onclick="saveCurrency()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>

    function setCurrencyDefaultValues() {
        clearCurrencyForm();
        $('#isActive').prop('checked', true);
        $('#btnSave').prop('disabled', false);
    }

    function handleCurrencyEnterKey(event) {
        if (event.key === 'Enter') loadCurrencyGrid();
    }

    function clearCurrencySearch() {
        $('#txtsearch').val('');
        loadCurrencyGrid();
    }

    function loadCurrencyGrid() {
        let searchString = $('#txtsearch').val();
        let url = '@Url.Action("ListCurrency", "Currency", new { area = "Master" })';
        let columns = [
            {
                title: "Actions",
                width: "150px",
                template: function (dataItem) {
                    let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openCurrencyModal('${dataItem.currencyId}', 'view')">
                    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                    if (permissions.canEdit) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openCurrencyModal('${dataItem.currencyId}', 'edit')">
                    <i class="material-symbols-outlined text-warning">edit</i></button>`;
                    }

                    if (permissions.canDelete) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deleteCurrency('${dataItem.currencyId}')">
                    <i class="material-symbols-outlined text-danger">delete</i></button>`;
                    }
                    return buttons;
                }
            },
            { field: "currencyCode", title: "Code" },
            { field: "currencyName", title: "Name" },
            { field: "remarks", title: "Remarks" },
            { field: "isMultiply", title: "Multiply", template: '<input type="checkbox" #= isMultiply ? "checked" : "" # disabled />' },
            { field: "isActive", title: "Active", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
        ];

        initializeKendoGrid("currencyGrid", url, { searchString, companyId }, columns);
    }

    function openCurrencyModal(id, mode) {
        $.get('@Url.Action("GetCurrencyById", "Currency", new { area = "Master" })', { currencyId: id, companyId })
            .done(function (response) {
                if (response.success) {
                    populateCurrencyModalFields(response.data);
                    setCurrencyMode(mode);
                    $('#addCurrencyModal').modal('show');
                }
            });
    }

    function populateCurrencyModalFields(data) {
        $('#currencyId').val(data.CurrencyId);
        $('#currencyCode').val(data.CurrencyCode);
        $('#currencyName').val(data.CurrencyName);
        $('#remarks').val(data.Remarks);
        $('#isMultiply').prop('checked', data.IsMultiply);
        $('#isActive').prop('checked', data.IsActive);

        $('#createById').text(data.CreateById || "N/A");
        $('#createDate').text(data.CreateDate ? new Date(data.CreateDate).toLocaleString() : "N/A");
        $('#editById').text(data.EditById || "N/A");
        $('#editDate').text(data.EditDate ? new Date(data.EditDate).toLocaleString() : "N/A");

        //checkMandatoryCurrencyFields();
    }

    function setCurrencyMode(mode) {
        const isView = mode === 'view';
        const canEdit = permissions.canEdit && !isView;

        $('#currencyCode, #currencyName, #remarks').prop('readonly', !canEdit);
        $('#isMultiply').prop('disabled', !canEdit);
        $('#isActive').prop('disabled', !canEdit);
        $('#btnSave').toggle(canEdit);
        $('#btnEdit').toggle(isView && permissions.canEdit);
        $('#btnClose').show();
        $('#btnClear').hide();
    }

    function deleteCurrency(id) {
        if (!permissions.canDelete) {
            alert('You do not have permission to delete records.');
            return;
        }

        $('#confirmationModal').modal('show');
        $('#confirmDelete').off('click').click(function () {
            $.ajax({
                url: `/Master/Currency/DeleteCurrency?currencyId=${id}&companyId=${companyId}`,
                type: "DELETE",
                success: function (response) {
                    if (response.success) {
                        loadCurrencyGrid();
                        $('#confirmationModal').modal('hide');
                    }
                }
            });
        });
    }

    function saveCurrency() {
        let data = {
            CurrencyId: parseInt($('#currencyId').val()) || 0,
            CurrencyCode: $('#currencyCode').val().trim(),
            CurrencyName: $('#currencyName').val().trim(),
            Remarks: $('#remarks').val(),
            IsMultiply: $('#isMultiply').prop('checked'),
            IsActive: $('#isActive').prop('checked'),
            CreateById: parseInt($('#createById').val()) || 0,
            CreateDate: new Date($('#createDate').val()) || null,
            EditById: parseInt($('#editById').val()) || null,
            EditDate: new Date($('#editDate').val()) || null
        };

        if (!data.CurrencyCode || !data.CurrencyName) {
            alert('Code and Name are required!');
            return;
        }

        $.ajax({
            url: '@Url.Action("SaveCurrency", "Currency", new { area = "Master" })',
            type: "POST",
            data: JSON.stringify({ currency: data }),
            contentType: "application/json",
            success: function (response) {
                if (response.success) {
                    $('#addCurrencyModal').modal('hide');
                    loadCurrencyGrid();
                    clearCurrencyForm();
                }
            },
            error: function (error) {
                alert("Error: " + error.responseText);
            }
        });
    }

    function clearCurrencyForm() {
        $('#currencyForm')[0].reset();
        $('#currencyId').val(0);
        $('#createById').text('');
        $('#createDate').text('');
        $('#editById').text('');
        $('#editDate').text('');
        $('#btnSave').prop('disabled', true);
    }

    function checkMandatoryCurrencyFields() {
        debugger;
        let isValid = $('#currencyCode').val().trim() && $('#currencyName').val().trim();
        $('#btnSave').prop('disabled', !isValid);
    }
</script>