<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h3>Order Type</h3>

                <!-- Action Row -->
                <div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-3">
                    <!-- Search Section -->
                    <div class="d-flex flex-grow-1 gap-2 align-items-center me-3">
                        <div style="width: 150px;">
                            <input type="text" id="txtsearch" class="form-control" placeholder="Search..." onkeydown="handleEnterKey(event)">
                        </div>
                        <button type="button" class="btn btn-primary btn-sm" onclick="loadCurrencyLocalDtGrid();">
                            <span class="material-symbols-outlined">search</span>
                        </button>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="clearSearch();">
                            <span class="material-symbols-outlined">close</span>
                        </button>
                    </div>

                    <!-- Add Button -->
                    <div class="ms-auto">
                        <button type="button" class="btn btn-success btn-sm" id="refreshGrid" onclick="loadCurrencyLocalDtGrid();">
                            <span class="material-symbols-outlined">refresh</span>
                        </button>
                        <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#addCurrencyLocalDtModal" id="addCurrencyLocalDtrecord">
                            <span class="material-symbols-outlined">add</span>
                        </button>
                    </div>
                </div>
                <div id="gridCurrencyLocalDt"></div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="addCurrencyLocalDtModal" tabindex="-1" aria-labelledby="addCurrencyLocalDtModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCurrencyLocalDtModalLabel">Add/Edit Order Type</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearcurrencyLocalDtForm();"></button>
            </div>
            <div class="modal-body p-4">
                <form id="currencyLocalDtForm">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="cmb_currencyLocalDt" class="form-label">Category <span class="text-danger">*</span></label>
                                <select id="cmb_currencyLocalDt" style="width: 100%"></select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="currencyLocalDtValidFrom" class="form-label">Valid From <span class="text-danger">*</span></label>
                                <div class="k-datepicker k-input">
                                    <input type="text" id="currencyLocalDtValidFrom" required>
                                </div>
                                <div class="invalid-feedback">Please select Valid From</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="currencyLocalDtPercentage" class="form-label">Currency <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="currencyLocalDtPercentage" required>
                            </div>
                        </div>
                    </div>

                    <!-- Audit Fields -->
                    <div class="accordion mt-3" id="auditAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#auditCollapse">
                                    Audit Details
                                </button>
                            </h2>
                            <div id="auditCollapse" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="currencyLocalDtcreateBy" class="form-label">Created By</label>
                                            <p id="currencyLocalDtcreateBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="currencyLocalDtcreateDate" class="form-label">Created Date</label>
                                            <p id="currencyLocalDtcreateDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="currencyLocalDteditBy" class="form-label">Modified By</label>
                                            <p id="currencyLocalDteditBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="currencyLocalDteditDate" class="form-label">Modified Date</label>
                                            <p id="currencyLocalDteditDate" class="form-control-plaintext"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCurrencyLocalDtClose" onclick="clearcurrencyLocalDtForm()">Close</button>
                <button type="button" class="btn btn-primary" id="btnCurrencyLocalDtEdit">Edit</button>
                <button type="button" class="btn btn-secondary" id="btnCurrencyLocalDtClear" onclick="clearcurrencyLocalDtForm()">Clear</button>
                <button type="button" class="btn btn-primary" id="btnCurrencyLocalDtSave" onclick="saveCurrencyLocalDt()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
        function initializecurrencyLocalDtForm() {
            clearcurrencyLocalDtForm();
        }

        function clearcurrencyLocalDtForm() {
            $('#currencyLocalDtForm')[0].reset();

            $('#currencyId').val(0);
            $('#cmb_currencyLocalDt').data("kendoComboBox").value('');
            $('#currencyLocalDtcreateBy').text('');
            $('#currencyLocalDtcreateDate').text('');
            $('#currencyLocalDteditBy').text('');
            $('#currencyLocalDteditDate').text('');

            // Reset readonly and disabled states
            $('#currencyLocalDtValidFrom, #currencyLocalDtPercentage').prop('readonly', false);
            $('#btnCurrencyLocalDtSave').prop('disabled', false);
            $('#btnCurrencyLocalDtSave').show();
            $('#btnCurrencyLocalDtClear').show();
            $('#btnCurrencyLocalDtEdit').hide();
        }

        function handleEnterKey(event) {
            if (event.key === 'Enter') loadCurrencyLocalDtGrid();
        }

        function clearSearch() {
            $('#txtsearch').val('');
            loadCurrencyLocalDtGrid();
        }

        function checkCurrencyLocalDtMandatoryFields() {
            let isValid = $('#currencyLocalDtValidFrom').val().trim() && $('#currencyLocalDtPercentage').val().trim();
            $('#btnCurrencyLocalDtSave').prop('disabled', !isValid);

            // Add visual feedback
            $('#currencyLocalDtValidFrom, #currencyLocalDtPercentage').toggleClass('is-invalid', !isValid);
        }

    function loadCurrencyLocalDtGrid() {
        let searchString = $('#txtsearch').val();
        let url = '@Url.Action("CurrencyLocalDtList", "Currency", new { area = "Master" })';
        let columns = [
            {
                title: "Actions",
                width: "100px",
                template: function (dataItem) {
                    let buttons = ` <button class="ps-0 border-0 bg-transparent" onclick="openCurrencyLocalDtModal('${dataItem.currencyId}','${dataItem.validFrom}', 'view')">
                        <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                    if (permissions.canEdit) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openCurrencyLocalDtModal('${dataItem.currencyId}','${dataItem.validFrom}', 'edit')">
                        <i class="material-symbols-outlined text-warning">edit</i></button>`;
                    }

                    if (permissions.canDelete) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deleteCurrencyLocalDt('${dataItem.currencyId}','${dataItem.validFrom}')">
                        <i class="material-symbols-outlined text-danger">delete</i></button>`;
                    }
                    return buttons;
                }
            },
            { field: "currencyName", title: "Name" },
            {
                field: "validFrom",
                title: "Valid From",
                template: "#= kendo.toString(kendo.parseDate(validFrom, 'yyyy-MM-dd'), 'dd/MM/yyyy') #"
            },
            { field: "exhRate", title: "Exh-Rate" }
        ];

        let grid = $("#gridCurrencyLocalDt").data("kendoGrid");
        if (grid) {

            grid.dataSource.read({ searchString: searchString, companyId: companyId });
        } else {
            // Initialize grid if it doesn’t exist
            initializeKendoGrid("gridCurrencyLocalDt", url, { searchString, companyId }, columns);
        }
    }

    function openCurrencyLocalDtModal(id, validFrom, mode) {
        const $modal = $('#addCurrencyLocalDtModal');
        $modal.find('.modal-content').append('<div class="modal-overlay"><div class="spinner"></div></div>');
        $.get('@Url.Action("GetCurrencyLocalDtById", "Currency", new { area = "Master" })', { currencyId: id, validFrom, companyId })
            .done(function (response) {
                if (response.success) {
                    populateCurrencyLocalDtModalFields(response.data);
                    setCurrencyLocalDtMode(mode);
                    $('#addCurrencyLocalDtModal').modal('show');
                }
            })
            .always(() => $modal.find('.modal-overlay').remove());
    }

    function populateCurrencyLocalDtModalFields(data) {
        const datePicker = $("#currencyLocalDtValidFrom").data("kendoDatePicker");
        const validFrom = data.validFrom ? kendo.parseDate(data.validFrom, "yyyy-MM-dd") : null;
        datePicker.value(validFrom);
        $('#currencyLocalDtValidFrom').val(validFrom ? kendo.toString(validFrom, 'yyyy-MM-dd') : '');
        $('#currencyLocalDtPercentage').val(data.exhRate);
        $('#cmb_currencyLocalDt').data("kendoComboBox").value(data.currencyId > 0 ? data.currencyId : '');
        $('#currencyLocalDtcreateBy').text(data.createBy || "N/A");
        $('#currencyLocalDtcreateDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
        $('#currencyLocalDteditBy').text(data.editBy || "N/A");
        $('#currencyLocalDteditDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");

        checkCurrencyLocalDtMandatoryFields();
    }

        function setCurrencyLocalDtMode(mode) {
            const isView = mode === 'view';
            const canEdit = permissions.canEdit && !isView;

            $('#currencyLocalDtValidFrom, #currencyLocalDtPercentage').prop('readonly', !canEdit);
            $('#btnCurrencyLocalDtSave').toggle(canEdit);
            $('#btnCurrencyLocalDtEdit').toggle(isView && permissions.canEdit);
            $('#btnCurrencyLocalDtClose').show();
            $('#btnCurrencyLocalDtClear').hide();
            $('#btnClear').hide();
        }

    function deleteCurrencyLocalDt(id, validFrom) {
            showDeleteModal("Are you sure you want to delete this records?", function () {
                $.ajax({
                    url: '@Url.Action("DeleteCurrencyLocalDt", "Currency", new { area = "Master" })',
                    type: "DELETE",
                    data: { currencyId: id, validFrom: validFrom, companyId: companyId },
                    success: function (response) {
                        if (response.success) {
                            loadCurrencyLocalDtGrid();
                            $('#confirmationModal').modal('hide');
                        }
                    }
                });
            });
        }

    function saveCurrencyLocalDt() {
        const datePicker = $("#currencyLocalDtValidFrom").data("kendoDatePicker");
            let CurrencyLocalDtData = {
                CurrencyId: parseInt($('#cmb_currencyLocalDt').data("kendoComboBox").value()) || 0,
                ValidFrom: kendo.toString(datePicker.value(), "yyyy-MM-dd"),
                ExhRate: parseFloat($('#currencyLocalDtPercentage').val())||0,
            };

            console.log("CurrencyLocalDt Data : " + CurrencyLocalDtData);

        if (!CurrencyLocalDtData.CurrencyId || !CurrencyLocalDtData.ValidFrom || !CurrencyLocalDtData.ExhRate) {
                alert('Code and Name are required!');
                return;
            }

            $.ajax({
                url: '@Url.Action("SaveCurrencyLocalDt", "Currency", new { area = "Master" })',
                type: "POST",
                data: JSON.stringify({ currencyLocalDt: CurrencyLocalDtData, companyId }),
                contentType: "application/json",
                success: function (response) {
                    if (response.success) {

                        loadCurrencyLocalDtGrid();
                        clearcurrencyLocalDtForm();
                        $('#addCurrencyLocalDtModal').modal('hide');
                    } else {
                        alert(response.message || "Failed to save account group.");
                    }
                },
                error: function (xhr) {
                    alert("Error: " + (xhr.responseJSON?.message || "An unexpected error occurred"));
                }
            });
        }
</script>