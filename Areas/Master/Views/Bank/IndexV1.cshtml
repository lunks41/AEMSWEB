@{
    ViewData["Title"] = $"Bank ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .custom-nav-pills .nav-link {
        padding: 0.25rem 0.5rem; /* Adjusts the vertical and horizontal padding */
        font-size: 0.875rem; /* Adjusts the font size */
    }
</style>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h3>Bank</h3>

                <!-- Action Row -->
                <div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-3">
                    <!-- Search Section -->
                    <div class="d-flex flex-grow-1 gap-2 align-items-center me-3">
                        <div style="width: 150px;">
                            <input type="text" id="txtsearch" class="form-control" placeholder="Search..." onkeydown="handleEnterKey(event)">
                        </div>
                        <button type="button" class="btn btn-primary" onclick="loadGrid();">
                            <i class="mdi mdi-magnify"></i> Search
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="clearSearch();">
                            <i class="mdi mdi-close"></i> Clear
                        </button>
                    </div>

                    <!-- Add Button -->
                    <div class="ms-auto">
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#bankModal" id="addrecord">
                            <i class="mdi mdi-plus me-1"></i> Add
                        </button>
                    </div>
                </div>
                <div id="gridBank"></div>
            </div>
        </div>
    </div>
</div>

@section externalhtml {
    <div class="modal fade" id="addBankModal" tabindex="-1" aria-labelledby="addBankModalLabel" aria-hidden="true" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-scrollable modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addBankModalLabel">Add Bank</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <form id="bankForm">
                        <div class="row">
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="bankCode" class="form-label">Bank Code <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="bankCode" required>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="bankName" class="form-label">Bank Name <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="bankName" required>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="accountNo" class="form-label">Account No <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="accountNo" required>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="swiftCode" class="form-label">Swift Code</label>
                                    <input type="text" class="form-control" id="swiftCode">
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="iban" class="form-label">IBAN</label>
                                    <input type="text" class="form-control" id="iban">
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="cmb_currency" class="form-label">Currency</label>
                                    <select id="cmb_currency"></select>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-12">
                                <div class="mb-2">
                                    <label for="cmb_glcode" class="form-label">GL Account</label>
                                    <select id="cmb_glcode" style="width: 100%"></select>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-6">
                                <label for="remarks1" class="form-label">Remarks 1</label>
                                <textarea class="form-control" id="remarks1" rows="2"></textarea>
                            </div>
                            <div class="col-md-6 ">
                                <label for="remarks2" class="form-label">Remarks 2</label>
                                <textarea class="form-control" id="remarks2" rows="2"></textarea>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-3">
                                <input type="checkbox" id="isActive"> <label for="isActive">Is Active</label>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="accordion" id="detailsHistoryAccordion">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingDetails">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDetails" aria-expanded="false" aria-controls="collapseDetails">
                                            Details History
                                        </button>
                                    </h2>
                                    <div id="collapseDetails" class="accordion-collapse collapse" aria-labelledby="headingDetails" data-bs-parent="#detailsHistoryAccordion">
                                        <div class="accordion-body">
                                            <div class="row">
                                                <div class="col-md-3">
                                                    <label class="form-label">Created By</label>
                                                    <p id="createBy" class="form-control-plaintext"></p>
                                                </div>
                                                <div class="col-md-3">
                                                    <label class="form-label">Created Date</label>
                                                    <p id="createDate" class="form-control-plaintext"></p>
                                                </div>
                                                <div class="col-md-3">
                                                    <label class="form-label">Edited By</label>
                                                    <p id="editBy" class="form-control-plaintext"></p>
                                                </div>
                                                <div class="col-md-3">
                                                    <label class="form-label">Edited Date</label>
                                                    <p id="editDate" class="form-control-plaintext"></p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mt-4 text-end">
                            <button type="button" class="btn btn-secondary" id="clearBtn" onclick="clearForm()">Clear</button>
                            <button type="button" class="btn btn-primary" id="saveBtn" onclick="saveBank()" disabled>Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {

    <script>

        let companyId = 0;
        $(document).ready(function () {
            companyId = getUrlParameter('companyId');
            $('#bankCode, #bankName, #seqNo').on('input', checkMandatoryFields);
            loadGrid();
            clearForm();
            setDefaultValues();
            window.clearForm = clearForm;
        });

        function setDefaultValues() {
            clearForm();
            document.getElementById('isActive').checked = true;
            document.getElementById('btnSave').disabled = false;
        }

        function handleEnterKey(event) {
            if (event.key === 'Enter') {
                loadGrid();
            }
        }
        function clearSearch() {
            $('#txtsearch').val('');
            loadGrid();
        }

        function loadGrid() {
    
    let searchString = $('#txtsearch').val();
    let url = '@Url.Action("List", "Bank", new { area = "Master" })';
    const columns = [
        {
            title: "Actions",
            width: "150px",
            template: function (dataItem) {
                return `
                            <button class="btn btn-sm btn-primary" onclick="openModal('${dataItem.bankId}', 'view')">
                                <i class="mdi mdi-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-warning" onclick="openModal('${dataItem.bankId}', 'edit')">
                                <i class="mdi mdi-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="deleteBank('${dataItem.bankId}')">
                                <i class="mdi mdi-delete"></i>
                            </button>
                        `;
            },
            width: "150px"
        },
        { field: "bankCode", title: "Code" },
        { field: "bankName", title: "Name" },
        { field: "seqNo", title: "Sequence" },
        { field: "accGroupName", title: "Account Group" },
        { field: "remarks", title: "Remarks" },
        {
            field: "isActive",
            title: "Active",
            template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />'
        }
    ];

    initializeKendoGrid("gridBank", url, { searchString, companyId }, columns);
}

function openModal(id, mode) {
    $.get('@Url.Action("GetById", "Bank", new { area = "Master" })', { bankId: id, companyId })
        .done(function (response) {
            if (response.success) {
                const data = response.data;
                populateModalFields(data);

                setMode(mode);
                $('#addBankModal').modal('show');
            }
        });
}

function populateModalFields(data) {
    
    $('#bankId').val(data.bankId);
    $('#bankCode').val(data.bankCode);
    $('#bankName').val(data.bankName);
    $('#seqNo').val(data.seqNo);
    $('#remarks').val(data.remarks);
    $('#isActive').prop('checked', data.isActive);
    $("#accGroupName").val(data.accGroupName);

    // Load Details History (always read-only)
    $('#createBy').text(data.createBy || "N/A");
    $('#createDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
    $('#editBy').text(data.editBy || "N/A");
    $('#editDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");

    checkMandatoryFields();
}

function setMode(mode) {
    const isView = mode === 'view';
    $('#bankCode').prop('readonly', isView);
    $('#bankName').prop('readonly', isView);
    $('#seqNo').prop('readonly', isView);
    $('#remarks').prop('readonly', isView);
    $('#isActive').prop('disabled', isView);
    $('#accGroupName').prop('readonly', isView);
    $('#btnSave').toggle(!isView);
    $('#btnEdit').toggle(isView);
}

        function loadGrid() {
            let searchString = '';
            const gridname = ['Active', 'Inactive'];
            const url = "/Master/Bank/List";
            const columns = [

                { field: "bankId", title: "ID", width: "50px", hidden: true },
                { field: "bankCode", title: "Code", width: "150px" },
                { field: "bankName", title: "Name", width: "200px" },
                { field: "currencyName", title: "Currency", width: "200px" },
                { field: "accountNo", title: "Account No", width: "200px" },
                { field: "swiftCode", title: "Swift Code", width: "200px" },
                { field: "gLCode", title: "Gl Code", width: "200px" },
                { field: "glName", title: "Gl Name", width: "200px" },
                // Action Column
                {
                    title: "Actions",
                    width: "150px",
                    template: function (dataItem) {
                        return `
                                <button class="btn btn-sm btn-primary" onclick="editBank('${dataItem.bankId}')">
                                    <i class="fa fa-edit"></i> Edit
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteBank('${dataItem.bankId}')">
                                    <i class="fa fa-trash"></i> Delete
                                </button>
                            `;
                    }
                }
            ];

            for (var i = 0; i < gridname.length; i++) {
                const params = { selectedTab: gridname[i], searchString: searchString };
                initializeKendoGrid(gridname[i], url, params, columns);
            }
        }

        // Example functions for handling edit and delete actions
        function editBank(bankId) {
            if (bankId > 0) {
                $('#addBankModal').modal('show');
                loadBank(bankId);
            }
        }

        function deleteBank(bankId) {
            if (confirm("Are you sure you want to delete this bank?")) {
                alert("Delete bank with ID: " + bankId);
                if(bankId>0){
                loadBank(bankId);
                }
            }
        }

         function loadBank(bankId) {
               if (!bankId) {
                   $('#errorToast .toast-body').text("Invalid Bank ID");
                   alert('errorToast');
                   return;
               }

               $.ajax({
                   type: "GET",
                   url: "/Master/Bank/GetBankById",
                   data: { bankId: bankId },
                   success: function (response) {
                       
                       if (response.success) {
                           
                           let bank = response.data;
                           $('#bankId').val(bank.bankId);
                           $('#bankCode').val(bank.bankCode);
                           $('#bankName').val(bank.bankName);
                           $('#accountNo').val(bank.accountNo);
                           $('#swiftCode').val(bank.swiftCode);
                           $('#iban').val(bank.iban);
                           $('#cmb_currency').data('kendoComboBox').value(bank.currencyId);
                           $('#cmb_glcode').data('kendoMultiColumnComboBox').value(bank.glId);
                           $('#remarks1').val(bank.remarks1);
                           $('#remarks2').val(bank.remarks2);
                           $('#isActive').prop('checked', bank.isActive);

                           // Load Details History
                           $('#createBy').text(bank.createBy || "N/A");
                           $('#createDate').text(bank.createDate ? new Date(bank.createDate).toLocaleString() : "N/A");
                           $('#editBy').text(bank.editBy || "N/A");
                           $('#editDate').text(bank.editDate ? new Date(bank.editDate).toLocaleString() : "N/A");
                       } else {
                           $('#errorToast .toast-body').text(response.message);
                           alert('errorToast');
                       }
                   },
                   error: function (error) {
                       $('#errorToast .toast-body').text("Error loading bank details.");
                       alert('errorToast');
                   }
               });
           }

            function validateBankForm() {
               let isValid = true;
               let errorMessage = "";

               const bankCode = $('#bankCode').val().trim();
               const bankName = $('#bankName').val().trim();
                  const currency = $('#cmb_currency').data('kendoComboBox').value();
                  const gl = $('#cmb_glcode').data('kendoMultiColumnComboBox').value();

               // Check mandatory fields
               if (bankCode === "") {
                   errorMessage += "Bank Code is required.\n";
                   isValid = false;
               }
               if (bankName === "") {
                   errorMessage += "Bank Name is required.\n";
                   isValid = false;
               }
               if (currency === "" || currency === null) {
                   errorMessage += "Currency is required.\n";
                   isValid = false;
               }
               if (gl === "" || gl === null) {
                   errorMessage += "GL is required.\n";
                   isValid = false;
               }

               // Show error message if validation fails
               if (!isValid) {
                   alert(errorMessage);
               }

               return isValid;
           }

           function getBankFormData() {
               return {
                   bankCode: $('#bankCode').val().trim() || '',
                   bankName: $('#bankName').val().trim() || '',
                   accountNo: $('#accountNo').val().trim() || '',
                   swiftCode: $('#swiftCode').val().trim() || '',
                   iban: $('#iban').val().trim() || '',
                      currency: $('#cmb_currency').data('kendoComboBox').value() || '0', // 0 = default/unselected
                      gl: $('#cmb_glcode').data('kendoMultiColumnComboBox').value() || '0',
                   remarks1: $('#remarks1').val().trim() || '',
                   remarks2: $('#remarks2').val().trim() || '',
                   isActive: $('#isActive').prop('checked'),
               };
           }

           function saveBank() {
               if (!validateBankForm()) {
                   return;
               }

               var data = getBankFormData();

               $.ajax({
                   type: "POST",
                   url: "/Master/Bank/SaveBank",
                   data: JSON.stringify(data),
                   contentType: "application/json",
                   success: function (response) {
                       alert("Bank saved successfully");
                       $('#addBankModal').modal('hide');
                       loadGrid();
                   },
                   error: function (error) {
                       alert("Error: " + error.responseText);
                   }
               });
           }

            // Function to check if all mandatory fields are filled
           function checkMandatoryFields() {
               var bankCode = $('#bankCode').val().trim();
               var bankName = $('#bankName').val().trim();
               var accountNo = $('#accountNo').val().trim();

               if (bankCode && bankName && accountNo) {
                   $('#saveBtn').prop('disabled', false);
               } else {
                   $('#saveBtn').prop('disabled', true);
               }
           }

            // Function to clear the form
           function clearForm() {
               $('#bankForm').find('input:text, input:password, input:file, select, textarea').val('');
               $('#bankForm').find('input:radio, input:checkbox').prop('checked', false).prop('selected', false);
               $('#bankForm').find('textarea').val('');
               $('#saveBtn').prop('disabled', true);
               // Reset any custom elements like select2, datepickers, etc.
                  $('#cmb_currency').data('kendoComboBox').value(null).trigger('change');
                  $('#cmb_glcode').data('kendoMultiColumnComboBox').value(null).trigger('change');
           }

           function Refresh(){
                const currencyUrl = '@Url.Action("GetCurrencyLookup", "Lookup", new { area = "" })';
                BindComboBox(currencyUrl, "cmb_currency", "currencyName", "currencyId");

                const chartOfAccountUrl = '@Url.Action("GetChartOfAccountLookup", "Lookup", new { area = "" })';
                const columnsProperties = [
                    { field: 'glCode', title: 'Code', width: 100 },
                    { field: 'glName', title: 'Name', width: 200 }
                ];
                const filterFields = ['glCode', 'glName'];
                BindMultiColumnComboBox(chartOfAccountUrl, "cmb_glcode", "glName", "glId", columnsProperties, filterFields);
           }

           function SelectedDropdown(DrpdwnName) {

           }

           function OnSelectDropdown(dataItem, DrpdwnName) {

           }
    </script>

}