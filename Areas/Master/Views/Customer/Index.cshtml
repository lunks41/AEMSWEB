@{
    ViewData["Title"] = "Customers";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    bool canCreate = ViewBag.IsCreate ?? false;
    bool canEdit = ViewBag.IsEdit ?? false;
    bool canDelete = ViewBag.IsDelete ?? false;
    bool canRead = ViewBag.IsRead ?? false;
    int companyId = ViewBag.CompanyId;
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h3>Customers</h3>

                <!-- Action Row -->
                <div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-3">
                    <!-- Search Section -->
                    <div class="d-flex flex-grow-1 gap-2 align-items-center me-3">
                        <div style="width: 150px;">
                            <input type="text" id="txtsearch" class="form-control" placeholder="Search..." onkeydown="handleEnterKey(event)">
                        </div>
                        <button type="button" class="btn btn-primary" onclick="loadCustomerGrid();">
                            <i class="mdi mdi-magnify"></i> Search
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="clearCustomerSearch();">
                            <i class="mdi mdi-close"></i> Clear
                        </button>
                    </div>

                    <!-- Add Button -->
                    <div class="ms-auto">
                        <button type="button" class="btn btn-success btn-sm" id="refreshGrid" onclick="loadCustomerGrid();">
                            <span class="material-symbols-outlined">refresh</span>
                        </button>
                        @if (canCreate)
                        {
                            <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#addCustomerModal" id="addCustomerrecord">
                                <span class="material-symbols-outlined">add</span>
                            </button>
                        }
                    </div>
                </div>
                <div id="gridcustomer"></div>
            </div>
        </div>
    </div>
</div>

@section externalhtml {
    <!-- Include Modals -->
    @await Html.PartialAsync("_Customer")
    @await Html.PartialAsync("_Address")
    @await Html.PartialAsync("_Contact")
}

@section Scripts {
    <script>

    let companyId = 0;
    let permissions = {};
        $(document).ready(function () {
            companyId = getUrlParameter('companyId') || 0;

            permissions = {
                canCreate: @Json.Serialize(canCreate),
                canEdit: @Json.Serialize(canEdit),
                canDelete: @Json.Serialize(canDelete),
                canRead: @Json.Serialize(canRead),
            };
            Refresh();

            loadCustomerGrid();
            initializeCustomerForm();
            $('#btnCustomerEdit').on('click', function () { setCustomerMode("edit"); });
            $('#btnCustomerClose').on('click', function () { $('#addCustomerModal').modal('hide'); });
            $('#addCustomerrecord').on('click', function () {
                initializeCustomerForm();
                $('#addCustomerModal').modal('show');
            });

            $('#btnCustomerContactEdit').on('click', function () { setCustomerContactMode("edit"); });
            $('#btnCustomerContactClose').on('click', function () { $('#addCustomerContactModal').modal('hide'); });
            $('#addCustomerContactrecord').on('click', function () {
                initializeCustomerContactForm();
                $('#addCustomerContactModal').modal('show');
            });

            $('#btnCustomerAddressEdit').on('click', function () { setCustomerAddressMode("edit"); });
            $('#btnCustomerAddressClose').on('click', function () { $('#addCustomerAddressModal').modal('hide'); });
            $('#addCustomerAddressrecord').on('click', function () {
                initializeCustomerAddressForm();
                $('#addCustomerAddressModal').modal('show');
            });
        });

        function handleEnterKey(event) {
            if (event.key === 'Enter') loadCustomerGrid();
        }

        function clearCustomerSearch() {
            $('#txtsearch').val('');
            loadCustomerGrid();
        }

        function Refresh() {
             const customerCodeUrl = `@Url.Action("GetCustomerCodeLookup", "Lookup", new { area = "" })?companyId=${companyId}`;
            bindAutoComplete(customerCodeUrl, "customerCode", "code");

            const bankUrl = '@Url.Action("GetBankLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            bindComboBox(bankUrl, "cmd_bank", "bankName", "bankId");

            const currencyUrl = '@Url.Action("GetCurrencyLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            bindComboBox(currencyUrl, "cmd_currency", "currencyName", "currencyId");

            const creditTermsUrl = '@Url.Action("GetCreditTermLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            bindComboBox(creditTermsUrl, "cmd_creditTerm", "creditTermName", "creditTermId");

            const accountSetupUrl = '@Url.Action("GetAccountSetupLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            bindComboBox(accountSetupUrl, "cmd_accSetup", "accSetupName", "accSetupId");

            const countryUrl = '@Url.Action("GetCountryLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            bindComboBox(countryUrl, "cmd_country", "countryName", "countryId");

        }

        function SelectedDropdown(DrpdwnName) { }

        function OnSelectDropdown(dataItem, DrpdwnName) { }

        document.getElementById('openChildAddressModal').addEventListener('click', function () {
            debugger;
            initializeCustomerAddressForm();
            var customerId = document.getElementById('customerId').value;
            document.getElementById('address_customerId').value = customerId;
            var addressModal = new bootstrap.Modal(document.getElementById('addAddressModal'));
            addressModal.show();
            
        });

        document.getElementById('openChildContactModal').addEventListener('click', function () {
            initializeCustomerAddressForm();
            var customerId = document.getElementById('customerId').value;
            document.getElementById('contact_customerId').value = customerId;
            clearCustomerContactForm(); // Ensure form is reset
            setCustomerContactMode('add'); // Explicitly set mode to 'add'
            var contactModal = new bootstrap.Modal(document.getElementById('addContactModal'));
            contactModal.show();
            
        });
    </script>
}