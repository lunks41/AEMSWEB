  <!-- Contact Modal -->
<div class="modal fade" id="addContactModal" tabindex="-1" aria-labelledby="addContactModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addContactModalLabel">Customer Contact</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="contactForm">
                    <input type="hidden" id="contact_customerId" />
                    <input type="hidden" id="contactId" />
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">Contact Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="contactName" required>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Other Name</label>
                            <input type="text" class="form-control" id="otherName">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Mobile Number <span class="text-danger">*</span></label>
                            <input type="tel" class="form-control" id="mobileNo" required>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Office Number</label>
                            <input type="tel" class="form-control" id="offNocont">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Fax Number</label>
                            <input type="tel" class="form-control" id="faxNocont">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Email <span class="text-danger">*</span></label>
                            <input type="email" class="form-control" id="emailAddcont" required>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Messaging ID</label>
                            <input type="text" class="form-control" id="messId">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Messaging Type</label>
                            <input type="text" class="form-control" id="contactMessType">
                        </div>
                        <div class="col-md-12">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="isDefaultCont">
                                <label class="form-check-label">Is Default Contact</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="isFinanceCont">
                                <label class="form-check-label">Is Finance Contact</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="isSalesCont">
                                <label class="form-check-label">Is Sales Contact</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="isActiveCont">
                                <label class="form-check-label">Is Active</label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCustomerContactClose" onclick="clearCustomerContactForm()">Close</button>
                <button type="button" class="btn btn-primary" id="btnCustomerContactEdit">Edit</button>
                <button type="button" class="btn btn-secondary" id="btnCustomerContactClear" onclick="clearCustomerContactForm()">Clear</button>
                <button type="button" class="btn btn-primary" id="btnCustomerContactSave" onclick="saveCustomerContact()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>

    function initializeCustomerContactForm() {
        clearCustomerContactForm();
        $('#isActiveCont').prop('checked', true);
    }

    function clearCustomerContactForm() {
        $('#contactId').val('');
        $('#contact_customerId').val('');
        $('#contactName').val('');
        $('#otherName').val('');
        $('#mobileNo').val('');
        $('#offNocont').val('');
        $('#faxNocont').val('');
        $('#emailAddcont').val('');
        $('#messId').val('');
        $('#contactMessType').val('');
        $('#isDefaultCont').prop('checked', false);
        $('#isFinanceCont').prop('checked', false);
        $('#isSalesCont').prop('checked', false);
        $('#isActiveCont').prop('checked', false);
    }

    function loadcustomerContactGrid(contact_customerId) {
        let grid = $("#gridcontact").data("kendoGrid");
        let url = '@Url.Action("ListContacts", "Customer", new { area = "Master" })';
        let columns = [
            {
                title: "Actions",
                width: "150px",
                template: function (dataItem) {
                    let buttons = `<button class="ps-0 border-0 bg-transparent" onclick="openCustomerContactModal('${dataItem.customerId}','${dataItem.contactId}', 'view')">
                    <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                    if (permissions.canEdit) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openCustomerContactModal('${dataItem.customerId}','${dataItem.contactId}', 'edit')">
                    <i class="material-symbols-outlined text-warning">edit</i></button>`;
                    }

                    if (permissions.canDelete) {
                        buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deleteCustomerContact('${dataItem.customerId}','${dataItem.contactId}')">
                    <i class="material-symbols-outlined text-danger">delete</i></button>`;
                    }
                    return buttons;
                }
            },
            { field: "isDefault", title: "Is Default", width: "200px", template: '<input type="checkbox" #= isDefault ? "checked" : "" # disabled />' },
            { field: "contactName", title: "Name", width: "200px" },
            { field: "otherName", title: "Othre Name", width: "200px" },
            { field: "mobileNo", title: "MobileNo", width: "200px" },
            { field: "offNo", title: "off No", width: "200px" },
            { field: "faxNo", title: "faxNo", width: "200px" },
            { field: "emailAdd", title: "emailAdd", width: "200px" },
            { field: "messId", title: "messId", width: "200px" },
            { field: "contactMessType", title: "contactMessType", width: "200px" },
            { field: "isFinance", title: "Is Financial", width: "200px", template: '<input type="checkbox" #= isFinance ? "checked" : "" # disabled />' },
            { field: "isSales", title: "Is Sales", width: "200px", template: '<input type="checkbox" #= isSales ? "checked" : "" # disabled />' },
            { field: "isActive", title: "Is Active", width: "200px", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
        ];

        if (grid) {
            grid.dataSource.read({ customerId: contact_customerId, companyId: companyId });
        } else {
            initializeKendoGrid("gridcontact", url, { customerId:contact_customerId, companyId }, columns);
        }
    }

    function openCustomerContactModal(contact_customerId, contactId, mode) {
       
        event.preventDefault();
        $.get('@Url.Action("GetContactById", "Customer", new { area = "Master" })', { customerId: contact_customerId, contactId, companyId })
            .done(function (response) {
                console.log("Response:", response); // Debug response structure
                if (response.success) {
                    populateCustomerContactFields(response.data); // Populate modal fields
                    setCustomerContactMode(mode); // Set the mode (Edit/Add)
                    $('#addContactModal').modal('show'); // Show the child modal

                    // Ensure the parent modal stays visible
                    var parentModal = document.getElementById('addCustomerModal');
                    parentModal.classList.add('show');
                    parentModal.style.display = 'block';
                    parentModal.setAttribute('aria-hidden', 'false');
                } else {
                    alert(response.message || "Failed to fetch address.");
                }
            })
            .fail(function (xhr, status, error) {
                console.error("Error: ", error);
                alert("An error occurred while fetching customer address.");
            });
    }

    function populateCustomerContactFields(data) {
       
        $('#contact_customerId').val(data.customerId);
        $('#contactId').val(data.contactId);

        $('#contactName').val(data.contactName);
        $('#otherName').val(data.otherName);
        $('#mobileNo').val(data.mobileNo);
        $('#offNocont').val(data.offNo);
        $('#faxNocont').val(data.faxNo);
        $('#emailAddcont').val(data.emailAdd);
        $('#messId').val(data.messId);
        $('#contactMessType').val(data.contactMessType);

        $('#isDefaultCont').prop('checked', data.isDefault);
        $('#isFinanceCont').prop('checked', data.isFinance);
        $('#isSalesCont').prop('checked', data.isSales);
        $('#isActiveCont').prop('checked', data.isActive);

        $('#createBy').text(data.createBy || "N/A");
        $('#createDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
        $('#editBy').text(data.editBy || "N/A");
        $('#editDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");

       //checkcustomercontactFields();
    }

    function checkcustomercontactFields() {
        let isValid = $('#contactName').val().trim() && $('#otherName').val().trim() && $('#mobileNo').val().trim() && $('#offNocont').val().trim() && $('#faxNocont').val().trim() && $('#emailAddcont').val().trim();

        $('#contactName, #otherName').toggleClass('is-invalid', !isValid);
        $('#btnCustomerContactSave').prop('disabled', !isValid);
    }

    function setCustomerContactMode(mode) {
        const isView = mode === 'view';
        const canEdit = permissions.canEdit && !isView;

        $('#contactName, #otherName,  #mobileNo,#offNocont, #faxNocont,  #emailAddcont, #messId,  #contactMessType').prop('readonly', !canEdit);
        $('#isDefaultCont').prop('disabled', !canEdit);
        $('#isFinanceCont').prop('disabled', !canEdit);
        $('#isSalesCont').prop('disabled', !canEdit);
        $('#isActiveCont').prop('disabled', !canEdit);

        $('#btnCustomerContactSave').toggle(canEdit);
        $('#btnCustomerContactEdit').toggle(isView && permissions.canEdit);
        $('#btnCustomerContactClose').show();
        $('#btnCustomerContactClear').hide();
    }

    function deleteCustomerContact(contact_customerId, contactId) {
        showDeleteModal("Are you sure you want to delete this records?", function () {
            $.ajax({
                url: '@Url.Action("DeleteContact", "Customer", new { area = "Master" })',
                type: "DELETE",
                data: { customerId: id, contactId: contactId, companyId: companyId },
                success: function (response) {
                    if (response.success) {
                        loadcustomerContactGrid(contact_customerId);
                        $('#confirmationModal').modal('hide');
                    }
                }
            });
        });
    }

    function saveCustomerContact() {
        let successCustomerId = parseInt($('#contact_customerId').val()) || 0;
        const customerContactData = {
            CustomerId: parseInt( $('#contact_customerId').val()) || 0,
            ContactId: parseInt($('#contactId').val()) || 0,
            ContactName: $('#contactName').val(),
            OtherName: $('#otherName').val(),
            MobileNo: $('#mobileNo').val(),
            OffNo: $('#offNocont').val(),
            FaxNo: $('#faxNocont').val(),
            EmailAdd: $('#emailAddcont').val(),
            MessId: $('#messId').val(),
            ContactMessType: $('#contactMessType').val(),
            IsDefaultCont: $('#isDefaultCont').prop('checked'),
            IsFinanceCont: $('#isFinanceCont').prop('checked'),
            IsSalesCont: $('#isSalesCont').prop('checked'),
            IsActiveCont: $('#isActiveCont').prop('checked'),

        };
        console.log("Customer contact : " + customerContactData);
        $.ajax({
            url: '@Url.Action("SaveContact", "Customer", new { area = "Master" })',
            type: "POST",
            data: JSON.stringify({ customerContact: customerContactData, companyId }),
            contentType: "application/json",
            success: function (response) {
                if (response.success) {
                    $('#addContactModal').modal('hide');
                    loadcustomerContactGrid(successCustomerId);
                    clearCustomerContactForm();
                }
            }
        });
    }
</script>