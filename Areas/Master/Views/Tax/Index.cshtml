@{
    ViewData["Title"] = $"Order Type ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    bool canCreate = ViewBag.IsCreate ?? false;
    bool canEdit = ViewBag.IsEdit ?? false;
    bool canDelete = ViewBag.IsDelete ?? false;
    bool canRead = ViewBag.IsRead ?? false;
    int companyId = ViewBag.CompanyId;
}

<!-- Nav Pills -->
<ul class="nav nav-pills mb-3" id="taxTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="tax-tab" data-bs-toggle="pill"
                data-bs-target="#tax" type="button" role="tab" aria-controls="tax" aria-selected="true">
            <i class="mdi mdi-view-list me-1"></i> Tax
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="taxDt-tab" data-bs-toggle="pill"
                data-bs-target="#taxDt" type="button" role="tab" aria-controls="taxDt" aria-selected="false">
            <i class="mdi mdi-shape-outline me-1"></i> Tax Dt
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="taxcategory-tab" data-bs-toggle="pill"
                data-bs-target="#taxcategory" type="button" role="tab" aria-controls="taxcategory" aria-selected="false">
            <i class="mdi mdi-shape-outline me-1"></i> Tax Categories
        </button>
    </li>
</ul>

<!-- Tab Content -->
<div class="tab-content" id="taxTabsContent">
    <div class="tab-pane fade show active" id="tax" role="tabpanel" aria-labelledby="tax-tab">
        @await Html.PartialAsync("_Tax")
    </div>
    <div class="tab-pane fade" id="taxDt" role="tabpanel" aria-labelledby="taxDt-tab">
        @await Html.PartialAsync("_TaxDt")
    </div>
    <div class="tab-pane fade" id="taxcategory" role="tabpanel" aria-labelledby="taxcategory-tab">
        @await Html.PartialAsync("_TaxCategory")
    </div>
</div>

@section Scripts {
    <script>
        let companyId = 0;
        let permissions = {};;
        $(document).ready(function () {
            companyId = getUrlParameter('companyId') || 0;

            permissions = {
                canCreate: @Json.Serialize(canCreate),
                canEdit: @Json.Serialize(canEdit),
                canDelete: @Json.Serialize(canDelete),
                canRead: @Json.Serialize(canRead),
            };

            $("#taxDtValidFrom").kendoDatePicker({
                format: "dd/MM/yyyy",
                parseFormats: ["yyyy-MM-dd", "dd/MM/yyyy", "MM/dd/yyyy"],
                value: new Date(), // Default to today
                popup: {
                    appendTo: $("#addTaxDtModal")
                }
            });

            Refresh();

            loadTaxGrid();
            initializeTaxForm();
            clearTaxForm();
            $('#btnTaxEdit').on('click', function () { setTaxMode("edit"); });
            $('#btnTaxClose').on('click', function () { $('#addTaxModal').modal('hide'); });
            $('#addTaxrecord').on('click', function () {
                initializeTaxForm();
                $('#addTaxModal').modal('show');
            });

            loadTaxDtGrid();
            initializeTaxDtForm();
            clearTaxDtForm();
            $('#btnTaxDtEdit').on('click', function () { setTaxDtMode("edit"); });
            $('#btnTaxDtClose').on('click', function () { $('#addTaxDtModal').modal('hide'); });
            $('#addTaxDtrecord').on('click', function () {
                initializeTaxDtForm();
                $('#addTaxDtModal').modal('show');
            });


            loadTaxCategoryGrid();
            initializeTaxCategoryForm();
            clearTaxCategoryForm();
            $('#btnTaxCategoryEdit').on('click', function () { setTaxCategoryMode("edit"); });
            $('#btnTaxCategoryClose').on('click', function () { $('#addTaxCategoryModal').modal('hide'); });
            $('#addTaxCategoryrecord').on('click', function () {
                initializeTaxCategoryForm();
                $('#addTaxCategoryModal').modal('show');
            });

            $('#taxCode, #taxName').on('input', checkTaxMandatoryFields);
        });

        function Refresh() {
             const taxUrl = '@Url.Action("GetTaxLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            BindComboBox(taxUrl, "cmd_tax", "taxName", "taxId");

            const taxCategoryUrl = '@Url.Action("GetTaxCategoryLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            BindComboBox(taxCategoryUrl, "cmd_taxCategory", "taxCategoryName", "taxCategoryId");
        }

        function SelectedDropdown(DrpdwnName) { }

        function OnSelectDropdown(dataItem, DrpdwnName) { }
    </script>
}