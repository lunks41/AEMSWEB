@{
    ViewData["Title"] = $"Order Type ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    bool canCreate = ViewBag.IsCreate ?? false;
    bool canEdit = ViewBag.IsEdit ?? false;
    bool canDelete = ViewBag.IsDelete ?? false;
    bool canRead = ViewBag.IsRead ?? false;
    int companyId = ViewBag.CompanyId;
}

<!-- Nav Pills -->
<ul class="nav nav-pills mb-3" id="orderTypeTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="ordertype-tab" data-bs-toggle="pill"
                data-bs-target="#ordertype" type="button" role="tab" aria-controls="ordertype" aria-selected="true">
            <i class="mdi mdi-view-list me-1"></i> Order Types
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="ordertypecategory-tab" data-bs-toggle="pill"
                data-bs-target="#ordertypecategory" type="button" role="tab" aria-controls="ordertypecategory" aria-selected="false">
            <i class="mdi mdi-shape-outline me-1"></i> Categories
        </button>
    </li>
</ul>

<!-- Tab Content -->
<div class="tab-content" id="orderTypeTabsContent">
    <div class="tab-pane fade show active" id="ordertype" role="tabpanel" aria-labelledby="ordertype-tab">
        @await Html.PartialAsync("_OrderType")
    </div>
    <div class="tab-pane fade" id="ordertypecategory" role="tabpanel" aria-labelledby="ordertypecategory-tab">
        @await Html.PartialAsync("_OrderTypeCategory")
    </div>
</div>

@section Scripts {
    <script>
        let companyId = 0;
        let permissions = {};;
        $(document).ready(function () {
           
            companyId = getUrlParameter('companyId') || 0;

            permissions = {
                canCreate: @Json.Serialize(canCreate),
                canEdit: @Json.Serialize(canEdit),
                canDelete: @Json.Serialize(canDelete),
                canRead: @Json.Serialize(canRead),
            };

            $('#orderTypeCategoryCode, #orderTypeCategoryName').on('input', checkOrderTypeCategoryMandatoryFields);
            Refresh();

            loadOrderTypeGrid();
            initializeOrderTypeForm();
            clearOrderTypeForm();
            $('#btnOrderTypeEdit').on('click', function () { setOrderTypeMode("edit"); });
            $('#btnOrderTypeClose').on('click', function () { $('#addOrderTypeModal').modal('hide'); });
            $('#addOrderTyperecord').on('click', function () {
                initializeOrderTypeForm();
                $('#addOrderTypeModal').modal('show');
            });

            loadOrderTypeCategoryGrid();
            initializeOrderTypeCategoryForm();
            clearOrderTypeCategoryForm();
            $('#btnOrderTypeCategoryEdit').on('click', function () { setOrderTypeCategoryMode("edit"); });
            $('#btnOrderTypeCategoryClose').on('click', function () { $('#addOrderTypeCategoryModal').modal('hide'); });
            $('#addOrderTypeCategoryrecord').on('click', function () {
                initializeOrderTypeCategoryForm();
                $('#addOrderTypeCategoryModal').modal('show');
            });

            $('#orderTypeCode, #orderTypeName').on('input', checkOrderTypeMandatoryFields);
        });

        function Refresh() {
            const orderTypeCategoryUrl = '@Url.Action("GetOrderTypeCategoryLookup", "Lookup", new { area = "" })?companyId=' + companyId;
            bindComboBox(orderTypeCategoryUrl, "cmb_orderTypeCategory", "orderTypeCategoryName", "orderTypeCategoryId");
        }

        function SelectedDropdown(DrpdwnName) { }

        function OnSelectDropdown(dataItem, DrpdwnName) { }
    </script>
}