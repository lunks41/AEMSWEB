<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h3>Order Type Category</h3>

                <!-- Action Row -->
                <div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-3">
                    <!-- Search Section -->
                    <div class="d-flex flex-grow-1 gap-2 align-items-center me-3">
                        <div style="width: 150px;">
                            <input type="text" id="txtsearch" class="form-control" placeholder="Search..." onkeydown="handleEnterKey(event)">
                        </div>
                        <button type="button" class="btn btn-primary btn-sm" onclick="loadOrderTypeCategoryGrid();">
                            <span class="material-symbols-outlined">search</span>
                        </button>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="clearSearch();">
                            <span class="material-symbols-outlined">close</span>
                        </button>
                    </div>

                    <!-- Add Button -->
                    <div class="ms-auto">
                        <button type="button" class="btn btn-success btn-sm" id="refreshGrid" onclick="loadOrderTypeCategoryGrid();">
                            <span class="material-symbols-outlined">refresh</span>
                        </button>

                        <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#addOrderTypeCategoryModal" id="addOrderTypeCategoryrecord">
                            <span class="material-symbols-outlined">add</span>
                        </button>
                    </div>
                </div>
                <div id="gridOrderTypeCategory"></div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="addOrderTypeCategoryModal" tabindex="-1" aria-labelledby="addOrderTypeCategoryModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addOrderTypeCategoryModalLabel">Add/Edit Order Type Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearOrderTypeCategoryForm();"></button>
            </div>
            <div class="modal-body p-4">
                <form id="orderTypeCategoryForm">
                    <input type="hidden" id="orderTypeCategoryId" />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="orderTypeCategoryCode" class="form-label">Code <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="orderTypeCategoryCode" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="orderTypeCategoryName" class="form-label">Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="orderTypeCategoryName" required>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label for="orderTypeCategoryremarks" class="form-label">Remarks</label>
                                <textarea class="form-control" id="orderTypeCategoryremarks" rows="2"></textarea>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="isActive">
                                <label class="form-check-label" for="isActive">Is Active</label>
                            </div>
                        </div>
                    </div>

                    <!-- Audit Fields -->
                    <div class="accordion mt-3" id="auditAccordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#auditCollapse">
                                    Audit Details
                                </button>
                            </h2>
                            <div id="auditCollapse" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="orderTypeCategorycreateBy" class="form-label">Created By</label>
                                            <p id="orderTypeCategorycreateBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="orderTypeCategorycreateDate" class="form-label">Created Date</label>
                                            <p id="orderTypeCategorycreateDate" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="orderTypeCategoryeditBy" class="form-label">Modified By</label>
                                            <p id="orderTypeCategoryeditBy" class="form-control-plaintext"></p>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="orderTypeCategoryeditDate" class="form-label">Modified Date</label>
                                            <p id="orderTypeCategoryeditDate" class="form-control-plaintext"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnOrderTypeCategoryClose" onclick="clearOrderTypeCategoryForm()">Close</button>
                <button type="button" class="btn btn-primary" id="btnOrderTypeCategoryEdit">Edit</button>
                <button type="button" class="btn btn-secondary" id="btnOrderTypeCategoryClear" onclick="clearOrderTypeCategoryForm()">Clear</button>
                <button type="button" class="btn btn-primary" id="btnOrderTypeCategorySave" onclick="saveOrderTypeCategory()">Save</button>
            </div>
        </div>
    </div>
</div>

<script>

        function initializeOrderTypeCategoryForm() {
            clearOrderTypeCategoryForm();
            $('#isActive').prop('checked', true);
        }

        function clearOrderTypeCategoryForm() {
            $('#orderTypeCategoryForm')[0].reset();

            $('#orderTypeCategoryId').val(0);
            $('#orderTypeCategorycreateBy').text('');
            $('#orderTypeCategorycreateDate').text('');
            $('#orderTypeCategoryeditBy').text('');
            $('#orderTypeCategoryeditDate').text('');

            // Reset readonly and disabled states
            $('#orderTypeCategoryCode, #orderTypeCategoryName, #orderTypeCategoryremarks').prop('readonly', false);
            $('#isActive').prop('disabled', false);

            $('#isActive').prop('checked', true);
            $('#btnOrderTypeCategorySave').prop('disabled', false);
            $('#btnOrderTypeCategorySave').show();
            $('#btnOrderTypeCategoryClear').show();
            $('#btnOrderTypeCategoryEdit').hide();

        }

        function handleEnterKey(event) {
            if (event.key === 'Enter') loadOrderTypeCategoryGrid();
        }

        function clearSearch() {
            $('#txtsearch').val('');
            loadOrderTypeCategoryGrid();
        }

        function checkOrderTypeCategoryMandatoryFields() {
            let isValid = $('#orderTypeCategoryCode').val().trim() && $('#orderTypeCategoryName').val().trim();
            $('#btnOrderTypeCategorySave').prop('disabled', !isValid);

            // Add visual feedback
            $('#orderTypeCategoryCode, #orderTypeCategoryName').toggleClass('is-invalid', !isValid);
        }

        function loadOrderTypeCategoryGrid() {
            let searchString = $('#txtsearch').val();
            let url = '@Url.Action("OrderTypeCategoryList", "OrderType", new { area = "Master" })';
            let columns = [
                {
                    title: "Actions",
                    width: "100px",
                    template: function (dataItem) {
                        let buttons = ` <button class="ps-0 border-0 bg-transparent" onclick="openOrderTypeCategoryModal('${dataItem.orderTypeCategoryId}', 'view')">
                        <i class="material-symbols-outlined text-primary">visibility</i></button>`;

                        if (permissions.canEdit) {
                            buttons += `<button class="ps-0 border-0 bg-transparent" onclick="openOrderTypeCategoryModal('${dataItem.orderTypeCategoryId}', 'edit')">
                        <i class="material-symbols-outlined text-warning">edit</i></button>`;
                        }

                        if (permissions.canDelete) {
                            buttons += `<button class="ps-0 border-0 bg-transparent" onclick="deleteOrderTypeCategory('${dataItem.orderTypeCategoryId}')">
                        <i class="material-symbols-outlined text-danger">delete</i></button>`;
                        }
                        return buttons;
                    }
                },
                { field: "orderTypeCategoryCode", title: "Code" },
                { field: "orderTypeCategoryName", title: "Name" },
                { field: "remarks", title: "Remarks" },
                { field: "isActive", title: "Active", template: '<input type="checkbox" #= isActive ? "checked" : "" # disabled />' }
            ];

            let grid = $("#gridOrderTypeCategory").data("kendoGrid");
            if (grid) {
                // Update the data source with the new bankId
                grid.dataSource.read({ searchString: searchString, companyId: companyId });
            } else {
                // Initialize grid if it doesn’t exist
                initializeKendoGrid("gridOrderTypeCategory", url, { searchString, companyId }, columns);
            }
        }

        function openOrderTypeCategoryModal(id, mode) {
            const $modal = $('#addOrderTypeCategoryModal');
            $modal.find('.modal-content').append('<div class="modal-overlay"><div class="spinner"></div></div>');
            $.get('@Url.Action("GetOrderTypeCategoryById", "OrderType", new { area = "Master" })', { orderTypeCategoryId: id, companyId })
                .done(function (response) {
                    if (response.success) {
                        populateOrderTypeCategoryModalFields(response.data);
                        setOrderTypeCategoryMode(mode);
                        $('#addOrderTypeCategoryModal').modal('show');
                    }
                })
                .always(() => $modal.find('.modal-overlay').remove());
        }

    function populateOrderTypeCategoryModalFields(data) {
        debugger;
        $('#orderTypeCategoryId').val(data.orderTypeCategoryId);
        $('#orderTypeCategoryCode').val(data.orderTypeCategoryCode);
        $('#orderTypeCategoryName').val(data.orderTypeCategoryName);
        $('#orderTypeCategoryremarks').val(data.remarks);
        $('#isActive').prop('checked', data.isActive);

        $('#orderTypeCategorycreateBy').text(data.createBy || "N/A");
        $('#orderTypeCategorycreateDate').text(data.createDate ? new Date(data.createDate).toLocaleString() : "N/A");
        $('#orderTypeCategoryeditBy').text(data.editBy || "N/A");
        $('#orderTypeCategoryeditDate').text(data.editDate ? new Date(data.editDate).toLocaleString() : "N/A");

        checkOrderTypeCategoryMandatoryFields();
    }

        function setOrderTypeCategoryMode(mode) {
            const isView = mode === 'view';
            const canEdit = permissions.canEdit && !isView;

            $('#orderTypeCategoryCode, #orderTypeCategoryName,  #orderTypeCategoryremarks').prop('readonly', !canEdit);
            $('#isActive').prop('disabled', !canEdit);
            $('#btnOrderTypeCategorySave').toggle(canEdit);
            $('#btnOrderTypeCategoryEdit').toggle(isView && permissions.canEdit);
            $('#btnOrderTypeCategoryClose').show();
            $('#btnOrderTypeCategoryClear').hide();
            $('#btnClear').hide();
        }

        function deleteOrderTypeCategory(id) {
            showDeleteModal("Are you sure you want to delete this records?", function () {
                $.ajax({
                    url: '@Url.Action("DeleteOrderTypeCategory", "OrderType", new { area = "Master" })',
                    type: "DELETE",
                    data: { orderTypeCategoryId: id, companyId: companyId },
                    success: function (response) {
                        if (response.success) {
                            loadOrderTypeCategoryGrid();
                            $('#confirmationModal').modal('hide');
                        }
                    }
                });
            });
        }

        function saveOrderTypeCategory() {
            let orderTypeCategoryData = {
               OrderTypeCategoryId: parseInt($('#orderTypeCategoryId').val()) || 0,
               OrderTypeCategoryCode: $('#orderTypeCategoryCode').val().trim(),
               OrderTypeCategoryName: $('#orderTypeCategoryName').val().trim(),
                Remarks: $('#orderTypeCategoryremarks').val(),
                IsActive: $('#isActive').prop('checked')
            };

            console.log("orderTypeCategory Data : " + orderTypeCategoryData);

            if (!orderTypeCategoryData.OrderTypeCategoryCode || !orderTypeCategoryData.OrderTypeCategoryName) {
                alert('Code and Name are required!');
                return;
            }

            $.ajax({
                url: '@Url.Action("SaveOrderTypeCategory", "OrderType", new { area = "Master" })',
                type: "POST",
                data: JSON.stringify({ orderTypeCategory: orderTypeCategoryData, companyId }),
                contentType: "application/json",
                success: function (response) {
                    if (response.success) {
                        debugger;
                        loadOrderTypeCategoryGrid();
                        clearOrderTypeCategoryForm();
                        $('#addOrderTypeCategoryModal').modal('hide');
                    } else {
                        alert(response.message || "Failed to save account group.");
                    }
                },
                error: function (xhr) {
                    alert("Error: " + (xhr.responseJSON?.message || "An unexpected error occurred"));
                }
            });
        }
</script>